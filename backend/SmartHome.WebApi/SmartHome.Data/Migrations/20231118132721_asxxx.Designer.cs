// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartHome.Data;

#nullable disable

namespace SmartHome.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231118132721_asxxx")]
    partial class asxxx
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartHome.Data.Entities.ActivationTokenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("expires")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ActivationTokens");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c1617288-49d1-440b-9b10-c7fdcc47652f"),
                            CountryId = new Guid("d08ad77a-363d-4fe4-a365-b7a199c258b0"),
                            Name = "New York"
                        },
                        new
                        {
                            Id = new Guid("94a6c42d-9907-470c-8d8f-15f463e61a43"),
                            CountryId = new Guid("d08ad77a-363d-4fe4-a365-b7a199c258b0"),
                            Name = "Los Angeles"
                        },
                        new
                        {
                            Id = new Guid("55ae48aa-5f39-4941-80f9-d7e75f5ebbc0"),
                            CountryId = new Guid("d08ad77a-363d-4fe4-a365-b7a199c258b0"),
                            Name = "Chicago"
                        },
                        new
                        {
                            Id = new Guid("3d081f1a-f321-41f9-ab7b-8edf26f0b455"),
                            CountryId = new Guid("4e87e50d-0dfc-4beb-b924-8a15dccd469d"),
                            Name = "London"
                        },
                        new
                        {
                            Id = new Guid("05600e91-9df6-45b1-9ed1-d14da0e23dd9"),
                            CountryId = new Guid("8d2d7115-8edb-4286-8ebe-29868c83e134"),
                            Name = "Paris"
                        },
                        new
                        {
                            Id = new Guid("b08fd768-1707-4e11-8526-8b525269eec1"),
                            CountryId = new Guid("1c2a866d-7d22-4649-9969-7b06c2d86694"),
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = new Guid("36f95157-2420-40f0-b985-ca43f669fb3c"),
                            CountryId = new Guid("925058f6-cbd0-4461-8a60-65a389d61869"),
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = new Guid("737cd06b-8fcb-4c22-9b30-d3adc928174a"),
                            CountryId = new Guid("db3d54cd-0d2e-42a2-aa65-7aafa963c037"),
                            Name = "Beijing"
                        },
                        new
                        {
                            Id = new Guid("add9e18a-7c7e-4e80-b937-f6dfc25de1a6"),
                            CountryId = new Guid("804711a5-544c-4794-a92f-e63dbb3c9587"),
                            Name = "Sydney"
                        },
                        new
                        {
                            Id = new Guid("edb046f1-7c0d-44ff-88dc-c9bc0f43459a"),
                            CountryId = new Guid("94732780-d1fe-4e06-b344-230808b83da8"),
                            Name = "Toronto"
                        },
                        new
                        {
                            Id = new Guid("4c61be2a-0ac6-4d18-8704-c70ec3003b0f"),
                            CountryId = new Guid("11045ca1-bca7-466c-bdb7-c729ea89321e"),
                            Name = "Mumbai"
                        },
                        new
                        {
                            Id = new Guid("bbe0bb67-a5ff-4f7e-af75-7d2a83962b45"),
                            CountryId = new Guid("8f2abdec-4719-478d-99d1-994fd4bda7a0"),
                            Name = "Cape Town"
                        },
                        new
                        {
                            Id = new Guid("c2956e0c-b8c1-4de8-9637-dfd66b7a15cf"),
                            CountryId = new Guid("89b17577-056e-4dcb-a818-fb02ae28be2f"),
                            Name = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = new Guid("50c490fb-a274-4b8d-b5d0-e585661fbefc"),
                            CountryId = new Guid("aecc4348-96d4-48bf-9330-c63b4d98ae62"),
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = new Guid("c70d8312-e3f2-421b-a622-f8847928dadf"),
                            CountryId = new Guid("acae7027-62d4-46d5-83d3-623aed2bf3bb"),
                            Name = "Dubai"
                        },
                        new
                        {
                            Id = new Guid("db0b3413-508f-49b9-9c22-cbd3e965c329"),
                            CountryId = new Guid("1de2fcb8-d23f-4d8f-b457-3c23e62fcc73"),
                            Name = "Stockholm"
                        },
                        new
                        {
                            Id = new Guid("00538266-2e88-4c7c-837c-db0a96ee0212"),
                            CountryId = new Guid("31c37562-3633-47ad-8678-fded63776401"),
                            Name = "Seoul"
                        },
                        new
                        {
                            Id = new Guid("64172ba4-723b-4de8-81d8-f3b7cf8df105"),
                            CountryId = new Guid("4ff98b87-9c9c-419e-8aa8-9509337a4476"),
                            Name = "Mexico City"
                        },
                        new
                        {
                            Id = new Guid("1237fa69-d0f8-46c2-8675-17e566de35bc"),
                            CountryId = new Guid("f8ef2759-4f04-499b-8a2b-4986b557dfeb"),
                            Name = "Amsterdam"
                        },
                        new
                        {
                            Id = new Guid("781d20bc-b54d-4340-b0da-012cb8cf7660"),
                            CountryId = new Guid("09a469e4-c5f9-465b-95fc-10135e308a9c"),
                            Name = "Oslo"
                        },
                        new
                        {
                            Id = new Guid("b22f28a0-b157-4aec-a5aa-88d8c9a4e467"),
                            CountryId = new Guid("7543360c-46cc-4aa1-9fc9-3d576fe8eb37"),
                            Name = "Hanoi"
                        },
                        new
                        {
                            Id = new Guid("61b865ce-1c71-4b66-91e0-588fe34bcd50"),
                            CountryId = new Guid("4d1fb00c-30ce-41de-a82c-8dd85c93a4d8"),
                            Name = "Bangkok"
                        },
                        new
                        {
                            Id = new Guid("5a85116f-9d64-4e3d-9736-03a123f4bce2"),
                            CountryId = new Guid("8492221a-eb79-497f-a678-0a471f200026"),
                            Name = "Istanbul"
                        },
                        new
                        {
                            Id = new Guid("6c92de17-b673-4e12-b5ff-d21868c846b1"),
                            CountryId = new Guid("aee71404-4059-4b01-962f-25092ec0877c"),
                            Name = "Buenos Aires"
                        },
                        new
                        {
                            Id = new Guid("caf5d419-152d-4fc2-92b9-a46f882ec575"),
                            CountryId = new Guid("c28d297f-9269-4fb4-b99b-1fba74e98625"),
                            Name = "Rome"
                        },
                        new
                        {
                            Id = new Guid("1ea1219d-d581-4823-aa42-3277c1eaa2f4"),
                            CountryId = new Guid("aaac213b-6516-4dcc-9778-032b509157d6"),
                            Name = "Cairo"
                        },
                        new
                        {
                            Id = new Guid("cda3881e-ca24-47b4-ab86-1d5fc1cd72bc"),
                            CountryId = new Guid("a89457ac-d4d8-4046-b504-9707c1f034d4"),
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("25576184-f4e4-4bf8-b726-b5322ee62559"),
                            CountryId = new Guid("4210b8c4-a58b-4f73-8a3f-a8ae4887c1b8"),
                            Name = "Auckland"
                        },
                        new
                        {
                            Id = new Guid("cd937272-a3cc-4bd1-993d-3e480b51a6b7"),
                            CountryId = new Guid("96b69d62-4895-4b38-a5ac-cff27527da74"),
                            Name = "Nairobi"
                        },
                        new
                        {
                            Id = new Guid("18dd4715-1e7b-4a03-a201-fd47bad5faac"),
                            CountryId = new Guid("58d08d9c-50c1-4e28-bd05-5ff46f552048"),
                            Name = "Barcelona"
                        },
                        new
                        {
                            Id = new Guid("300c7c6f-29df-4f50-9734-e1ddf118c5dc"),
                            CountryId = new Guid("6114a37b-e482-4d23-a7cd-74e684dd97fd"),
                            Name = "Athens"
                        },
                        new
                        {
                            Id = new Guid("7f513a48-7c9b-4759-a952-01da0ee820dc"),
                            CountryId = new Guid("898a50bd-d5c8-40c8-875b-c4b2dab9b8e5"),
                            Name = "Dublin"
                        },
                        new
                        {
                            Id = new Guid("933ce889-1616-4d35-b68c-8988accf7422"),
                            CountryId = new Guid("946d5268-a2a2-43e1-8a84-a7f56c7c8566"),
                            Name = "Zurich"
                        },
                        new
                        {
                            Id = new Guid("dda66532-e5e2-47f3-b092-f9376f6a1795"),
                            CountryId = new Guid("e238f7c3-fdc4-4bc2-94f9-572fe53f0290"),
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("352b2b4c-1d51-4bac-92cd-196320a14e35"),
                            CountryId = new Guid("0014c76f-d518-4481-9e12-3e8b9955467d"),
                            Name = "Vienna"
                        },
                        new
                        {
                            Id = new Guid("835354bf-16ad-42ce-9108-0a24043de93d"),
                            CountryId = new Guid("db3d54cd-0d2e-42a2-aa65-7aafa963c037"),
                            Name = "Hong Kong"
                        },
                        new
                        {
                            Id = new Guid("11470498-ded0-4663-80fb-aa7f49989e9e"),
                            CountryId = new Guid("61b46b58-cd0b-4929-817e-84dff1a98c7b"),
                            Name = "Copenhagen"
                        },
                        new
                        {
                            Id = new Guid("56e675b2-43bf-46eb-98ff-20c7b31fe471"),
                            CountryId = new Guid("9b3eeb43-55e5-43a4-83bd-68829cd801c6"),
                            Name = "Lisbon"
                        },
                        new
                        {
                            Id = new Guid("7bfcf8ae-c90a-41ea-ab1e-25b49cf477f2"),
                            CountryId = new Guid("551ef8ce-3953-4c6d-a016-129f50e32b0f"),
                            Name = "Warsaw"
                        },
                        new
                        {
                            Id = new Guid("780e5676-ce25-4797-a333-fbcbb8ea95c3"),
                            CountryId = new Guid("299981f4-bacd-4a05-8ac5-0646a1595be7"),
                            Name = "Prague"
                        },
                        new
                        {
                            Id = new Guid("c39537be-c263-49ec-8e84-40f2df06dfa3"),
                            CountryId = new Guid("44428080-061c-415a-ace0-971bea240f68"),
                            Name = "Budapest"
                        },
                        new
                        {
                            Id = new Guid("db018f22-ef05-4f4a-9810-18b082c0fc66"),
                            CountryId = new Guid("3a418ec5-6ebf-4f05-b77a-7b16b35f31ab"),
                            Name = "Brussels"
                        },
                        new
                        {
                            Id = new Guid("c6403fbb-f926-4a3e-b794-9a59e460a4ab"),
                            CountryId = new Guid("37b6b0a6-748e-4160-8236-1e9958c0989d"),
                            Name = "Helsinki"
                        });
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CountryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d08ad77a-363d-4fe4-a365-b7a199c258b0"),
                            Name = "USA"
                        },
                        new
                        {
                            Id = new Guid("4e87e50d-0dfc-4beb-b924-8a15dccd469d"),
                            Name = "UK"
                        },
                        new
                        {
                            Id = new Guid("8d2d7115-8edb-4286-8ebe-29868c83e134"),
                            Name = "France"
                        },
                        new
                        {
                            Id = new Guid("1c2a866d-7d22-4649-9969-7b06c2d86694"),
                            Name = "Germany"
                        },
                        new
                        {
                            Id = new Guid("925058f6-cbd0-4461-8a60-65a389d61869"),
                            Name = "Japan"
                        },
                        new
                        {
                            Id = new Guid("db3d54cd-0d2e-42a2-aa65-7aafa963c037"),
                            Name = "China"
                        },
                        new
                        {
                            Id = new Guid("804711a5-544c-4794-a92f-e63dbb3c9587"),
                            Name = "Australia"
                        },
                        new
                        {
                            Id = new Guid("94732780-d1fe-4e06-b344-230808b83da8"),
                            Name = "Canada"
                        },
                        new
                        {
                            Id = new Guid("11045ca1-bca7-466c-bdb7-c729ea89321e"),
                            Name = "India"
                        },
                        new
                        {
                            Id = new Guid("8f2abdec-4719-478d-99d1-994fd4bda7a0"),
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = new Guid("89b17577-056e-4dcb-a818-fb02ae28be2f"),
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = new Guid("aecc4348-96d4-48bf-9330-c63b4d98ae62"),
                            Name = "Russia"
                        },
                        new
                        {
                            Id = new Guid("acae7027-62d4-46d5-83d3-623aed2bf3bb"),
                            Name = "UAE"
                        },
                        new
                        {
                            Id = new Guid("1de2fcb8-d23f-4d8f-b457-3c23e62fcc73"),
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = new Guid("31c37562-3633-47ad-8678-fded63776401"),
                            Name = "South Korea"
                        },
                        new
                        {
                            Id = new Guid("4ff98b87-9c9c-419e-8aa8-9509337a4476"),
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = new Guid("f8ef2759-4f04-499b-8a2b-4986b557dfeb"),
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("09a469e4-c5f9-465b-95fc-10135e308a9c"),
                            Name = "Norway"
                        },
                        new
                        {
                            Id = new Guid("7543360c-46cc-4aa1-9fc9-3d576fe8eb37"),
                            Name = "Vietnam"
                        },
                        new
                        {
                            Id = new Guid("4d1fb00c-30ce-41de-a82c-8dd85c93a4d8"),
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = new Guid("8492221a-eb79-497f-a678-0a471f200026"),
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = new Guid("aee71404-4059-4b01-962f-25092ec0877c"),
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = new Guid("c28d297f-9269-4fb4-b99b-1fba74e98625"),
                            Name = "Italy"
                        },
                        new
                        {
                            Id = new Guid("aaac213b-6516-4dcc-9778-032b509157d6"),
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = new Guid("a89457ac-d4d8-4046-b504-9707c1f034d4"),
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = new Guid("4210b8c4-a58b-4f73-8a3f-a8ae4887c1b8"),
                            Name = "New Zealand"
                        },
                        new
                        {
                            Id = new Guid("96b69d62-4895-4b38-a5ac-cff27527da74"),
                            Name = "Kenya"
                        },
                        new
                        {
                            Id = new Guid("58d08d9c-50c1-4e28-bd05-5ff46f552048"),
                            Name = "Spain"
                        },
                        new
                        {
                            Id = new Guid("6114a37b-e482-4d23-a7cd-74e684dd97fd"),
                            Name = "Greece"
                        },
                        new
                        {
                            Id = new Guid("898a50bd-d5c8-40c8-875b-c4b2dab9b8e5"),
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = new Guid("946d5268-a2a2-43e1-8a84-a7f56c7c8566"),
                            Name = "Switzerland"
                        },
                        new
                        {
                            Id = new Guid("e238f7c3-fdc4-4bc2-94f9-572fe53f0290"),
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("0014c76f-d518-4481-9e12-3e8b9955467d"),
                            Name = "Austria"
                        },
                        new
                        {
                            Id = new Guid("61b46b58-cd0b-4929-817e-84dff1a98c7b"),
                            Name = "Denmark"
                        },
                        new
                        {
                            Id = new Guid("9b3eeb43-55e5-43a4-83bd-68829cd801c6"),
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = new Guid("551ef8ce-3953-4c6d-a016-129f50e32b0f"),
                            Name = "Poland"
                        },
                        new
                        {
                            Id = new Guid("299981f4-bacd-4a05-8ac5-0646a1595be7"),
                            Name = "Czech Republic"
                        },
                        new
                        {
                            Id = new Guid("44428080-061c-415a-ace0-971bea240f68"),
                            Name = "Hungary"
                        },
                        new
                        {
                            Id = new Guid("3a418ec5-6ebf-4f05-b77a-7b16b35f31ab"),
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = new Guid("37b6b0a6-748e-4160-8236-1e9958c0989d"),
                            Name = "Finland"
                        });
                });

            modelBuilder.Entity("SmartHome.Data.Entities.PropertyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("AreaSquareMeters")
                        .HasColumnType("double precision");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("NumberOfFloors")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.SmartDeviceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Connection")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DeviceStatus")
                        .HasColumnType("integer");

                    b.Property<int>("DeviceType")
                        .HasColumnType("integer");

                    b.Property<float>("EnergySpending")
                        .HasColumnType("real");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PowerSupply")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SmartDevices");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SmartHome.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.EnvironmentalConditionsSensorEntity", b =>
                {
                    b.HasBaseType("SmartHome.Data.Entities.SmartDeviceEntity");

                    b.Property<string>("Test")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("EnvironmentalConditionsSensors", (string)null);
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.CountryEntity", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.PropertyEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.CityEntity", "City")
                        .WithMany("Properties")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.SmartDeviceEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.EnvironmentalConditionsSensorEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.SmartDeviceEntity", null)
                        .WithOne()
                        .HasForeignKey("SmartHome.Data.Entities.EnvironmentalConditionsSensorEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CountryEntity", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
