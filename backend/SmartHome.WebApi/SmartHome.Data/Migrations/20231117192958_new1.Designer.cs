// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartHome.Data;

#nullable disable

namespace SmartHome.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231117192958_new1")]
    partial class new1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartHome.Data.Entities.ActivationTokenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("expires")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ActivationTokens");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("46b423a1-8db6-4218-9212-c6581288cccc"),
                            CountryId = new Guid("41e65a99-682e-4db3-9c77-cd9f0f492769"),
                            Name = "New York"
                        },
                        new
                        {
                            Id = new Guid("aff9cd9c-0cf7-4467-9b1b-145870c8f1c5"),
                            CountryId = new Guid("41e65a99-682e-4db3-9c77-cd9f0f492769"),
                            Name = "Los Angeles"
                        },
                        new
                        {
                            Id = new Guid("5f424464-2d78-4bc8-bf9a-13d44fe9d363"),
                            CountryId = new Guid("41e65a99-682e-4db3-9c77-cd9f0f492769"),
                            Name = "Chicago"
                        },
                        new
                        {
                            Id = new Guid("27ddc351-5c85-4891-87c0-fe9a4fdbc3b0"),
                            CountryId = new Guid("f14da532-73cb-4cef-9e23-b9ac634c0862"),
                            Name = "London"
                        },
                        new
                        {
                            Id = new Guid("541b74fb-085b-45b5-993f-ad943b0b1d9c"),
                            CountryId = new Guid("05e0dda6-cdd1-4905-a3f3-b6fa703f9fda"),
                            Name = "Paris"
                        },
                        new
                        {
                            Id = new Guid("331266ee-2235-4c52-a88a-e28acbe39faf"),
                            CountryId = new Guid("a8abb419-e2db-4840-9430-06f5c836129d"),
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = new Guid("f7d0eb7f-01b8-4c95-b747-f572b3b5aab7"),
                            CountryId = new Guid("ab057ac1-beeb-4cda-91ce-375f9296e990"),
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = new Guid("b5d22d22-10ef-4ae1-9ad5-b327c35823b3"),
                            CountryId = new Guid("dffbd165-95ac-49fe-a866-ae37c10a3f5c"),
                            Name = "Beijing"
                        },
                        new
                        {
                            Id = new Guid("07cd065b-e353-41eb-adea-7f4f0992d77e"),
                            CountryId = new Guid("e21dae8e-083b-4978-b614-6032549224c4"),
                            Name = "Sydney"
                        },
                        new
                        {
                            Id = new Guid("342d4eea-c57b-4a0f-9ea3-0921d355079c"),
                            CountryId = new Guid("b93f5aaa-f4df-45a1-b94c-114f9bcfb199"),
                            Name = "Toronto"
                        },
                        new
                        {
                            Id = new Guid("94e75707-bff7-4861-9056-515b8647f652"),
                            CountryId = new Guid("f8a43cb3-f5ec-4b8c-af52-e6b3a5fdb44a"),
                            Name = "Mumbai"
                        },
                        new
                        {
                            Id = new Guid("d5c895fa-0592-4264-a7f0-52000727e5e4"),
                            CountryId = new Guid("4774be6c-4de0-48a3-a58e-b5b2b61e6010"),
                            Name = "Cape Town"
                        },
                        new
                        {
                            Id = new Guid("c8e9e178-e797-4095-a477-10f0e5e93833"),
                            CountryId = new Guid("40725f9d-248b-4f8b-853a-7f44868605f4"),
                            Name = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = new Guid("e8ba5c74-4f30-481e-916e-804b6ba8586a"),
                            CountryId = new Guid("3ec455f5-aa9b-4e29-afb2-8883cbff977e"),
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = new Guid("1f629948-fc0a-47d3-b830-38cd8ad0d8da"),
                            CountryId = new Guid("8ecdbbf2-1661-4127-a6fa-fdad05286238"),
                            Name = "Dubai"
                        },
                        new
                        {
                            Id = new Guid("d276db42-5bcd-4a4c-84fc-3de7793badfa"),
                            CountryId = new Guid("3044a02c-ce65-47d8-8bc2-fba617ebf9ef"),
                            Name = "Stockholm"
                        },
                        new
                        {
                            Id = new Guid("08a283c2-81a2-4529-a3f0-86cf1fa62b96"),
                            CountryId = new Guid("b67cb907-04f7-4548-ba73-7b3b14b29a01"),
                            Name = "Seoul"
                        },
                        new
                        {
                            Id = new Guid("cf57199d-39c2-4447-ac8b-dea81bb2857a"),
                            CountryId = new Guid("a30e177e-fef4-4975-889d-727e69f00367"),
                            Name = "Mexico City"
                        },
                        new
                        {
                            Id = new Guid("00264a43-a523-455f-b8bd-8492ab68cc5e"),
                            CountryId = new Guid("265a1979-4fd6-4943-8028-db6de7f5d294"),
                            Name = "Amsterdam"
                        },
                        new
                        {
                            Id = new Guid("eb14fea5-a0b5-4bb5-b94a-33ee1f1d6647"),
                            CountryId = new Guid("eadd73f2-7172-4f60-a14a-f1ffa2fff75e"),
                            Name = "Oslo"
                        },
                        new
                        {
                            Id = new Guid("770078d1-a70a-4198-a594-f5fb06038493"),
                            CountryId = new Guid("c5040cc1-23f5-4173-88b8-826f94372784"),
                            Name = "Hanoi"
                        },
                        new
                        {
                            Id = new Guid("298b414f-aa5a-4d9e-80a1-682dec49c4a0"),
                            CountryId = new Guid("2c20dafa-290d-4663-acd0-1042e672ef80"),
                            Name = "Bangkok"
                        },
                        new
                        {
                            Id = new Guid("9934e26b-5b0e-4166-b70b-ac7fc50283d6"),
                            CountryId = new Guid("aec7f58d-20e5-4195-830b-531669a4a9b9"),
                            Name = "Istanbul"
                        },
                        new
                        {
                            Id = new Guid("4342a698-4745-41a3-aec9-c456cdcf95d3"),
                            CountryId = new Guid("a021c359-8d8f-4e6f-86cf-51e4ee770881"),
                            Name = "Buenos Aires"
                        },
                        new
                        {
                            Id = new Guid("6ce58352-6fbd-4e8b-af42-71736697612f"),
                            CountryId = new Guid("4da55175-ad52-4c06-886f-299ffe618c36"),
                            Name = "Rome"
                        },
                        new
                        {
                            Id = new Guid("d957bb12-6f33-40c1-ab79-ddf2b8d0932d"),
                            CountryId = new Guid("75dcd23a-cba2-4971-9acf-c5558d6e8b93"),
                            Name = "Cairo"
                        },
                        new
                        {
                            Id = new Guid("3a0449a2-3f4a-43dc-989a-a5b54ac1dfba"),
                            CountryId = new Guid("cde450e1-5720-438d-ae66-bba74ea23255"),
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("c3c600e4-1776-4bc3-9335-1fc28e5cd8fb"),
                            CountryId = new Guid("36944af7-82b6-4604-bae7-d3f6bc11f5aa"),
                            Name = "Auckland"
                        },
                        new
                        {
                            Id = new Guid("8a0d077c-d79a-4b21-be22-78a5ac48de7b"),
                            CountryId = new Guid("78ba0fcd-79cc-4353-aa1b-118f734cd7ea"),
                            Name = "Nairobi"
                        },
                        new
                        {
                            Id = new Guid("ce63c3e0-3215-49db-9cfc-aa5807ae5b51"),
                            CountryId = new Guid("370448fb-cb9d-45d2-8820-cd76b08144ff"),
                            Name = "Barcelona"
                        },
                        new
                        {
                            Id = new Guid("c2af944f-2d41-4314-bca2-4a4fdbdabe16"),
                            CountryId = new Guid("f8925a58-85a1-4f1d-811e-2f4fc27e1c12"),
                            Name = "Athens"
                        },
                        new
                        {
                            Id = new Guid("a1487249-138c-44b4-84fc-210723e16442"),
                            CountryId = new Guid("5d855eb1-d0dd-4498-9853-2b9d802f8e0f"),
                            Name = "Dublin"
                        },
                        new
                        {
                            Id = new Guid("1a641730-6f3e-4703-87ea-9751d54425db"),
                            CountryId = new Guid("43abf536-f100-4755-9402-4948874ea9d8"),
                            Name = "Zurich"
                        },
                        new
                        {
                            Id = new Guid("0f0f9721-c8c4-4325-8917-2921c1a442e3"),
                            CountryId = new Guid("f89d5d8e-8bb8-4dcc-b988-b2b935cc5b55"),
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("8b364e30-bdda-43a9-9d52-cad14ddd53fa"),
                            CountryId = new Guid("f6fd639e-50ee-47bc-9f67-731c0772c74c"),
                            Name = "Vienna"
                        },
                        new
                        {
                            Id = new Guid("d9b5bd79-e087-441a-9780-8c4d2b7d3095"),
                            CountryId = new Guid("dffbd165-95ac-49fe-a866-ae37c10a3f5c"),
                            Name = "Hong Kong"
                        },
                        new
                        {
                            Id = new Guid("5d8ff7fb-83f1-40cd-afcd-bb80c9d9b793"),
                            CountryId = new Guid("3e93f46f-b637-468e-ad95-c67094408dcd"),
                            Name = "Copenhagen"
                        },
                        new
                        {
                            Id = new Guid("b15f9213-d93f-4826-aae9-3311dc3ba23f"),
                            CountryId = new Guid("3b0b7447-8d63-4789-8ab2-d1fea6a03ab1"),
                            Name = "Lisbon"
                        },
                        new
                        {
                            Id = new Guid("aea26c42-0393-44cb-9c8f-eca2614604b9"),
                            CountryId = new Guid("1a290a95-c0b6-466b-946c-2d1f76afb406"),
                            Name = "Warsaw"
                        },
                        new
                        {
                            Id = new Guid("038fd6a1-048e-4591-aeef-cda8cc90ec2a"),
                            CountryId = new Guid("785a587c-3047-4a04-82f8-c7b0f2307869"),
                            Name = "Prague"
                        },
                        new
                        {
                            Id = new Guid("7d847e65-20da-40c1-8819-553a0466baa4"),
                            CountryId = new Guid("e403c5f2-3da8-4f8e-911e-a1469e8a1cae"),
                            Name = "Budapest"
                        },
                        new
                        {
                            Id = new Guid("a588efab-54a7-401f-86ca-e2d24430842f"),
                            CountryId = new Guid("8b01d71c-018e-404d-8523-08a8167b35c9"),
                            Name = "Brussels"
                        },
                        new
                        {
                            Id = new Guid("21e627d6-6262-40b4-9a73-e746172aa6ee"),
                            CountryId = new Guid("788443a3-ed07-4136-8d01-0491581915f9"),
                            Name = "Helsinki"
                        });
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CountryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("41e65a99-682e-4db3-9c77-cd9f0f492769"),
                            Name = "USA"
                        },
                        new
                        {
                            Id = new Guid("f14da532-73cb-4cef-9e23-b9ac634c0862"),
                            Name = "UK"
                        },
                        new
                        {
                            Id = new Guid("05e0dda6-cdd1-4905-a3f3-b6fa703f9fda"),
                            Name = "France"
                        },
                        new
                        {
                            Id = new Guid("a8abb419-e2db-4840-9430-06f5c836129d"),
                            Name = "Germany"
                        },
                        new
                        {
                            Id = new Guid("ab057ac1-beeb-4cda-91ce-375f9296e990"),
                            Name = "Japan"
                        },
                        new
                        {
                            Id = new Guid("dffbd165-95ac-49fe-a866-ae37c10a3f5c"),
                            Name = "China"
                        },
                        new
                        {
                            Id = new Guid("e21dae8e-083b-4978-b614-6032549224c4"),
                            Name = "Australia"
                        },
                        new
                        {
                            Id = new Guid("b93f5aaa-f4df-45a1-b94c-114f9bcfb199"),
                            Name = "Canada"
                        },
                        new
                        {
                            Id = new Guid("f8a43cb3-f5ec-4b8c-af52-e6b3a5fdb44a"),
                            Name = "India"
                        },
                        new
                        {
                            Id = new Guid("4774be6c-4de0-48a3-a58e-b5b2b61e6010"),
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = new Guid("40725f9d-248b-4f8b-853a-7f44868605f4"),
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = new Guid("3ec455f5-aa9b-4e29-afb2-8883cbff977e"),
                            Name = "Russia"
                        },
                        new
                        {
                            Id = new Guid("8ecdbbf2-1661-4127-a6fa-fdad05286238"),
                            Name = "UAE"
                        },
                        new
                        {
                            Id = new Guid("3044a02c-ce65-47d8-8bc2-fba617ebf9ef"),
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = new Guid("b67cb907-04f7-4548-ba73-7b3b14b29a01"),
                            Name = "South Korea"
                        },
                        new
                        {
                            Id = new Guid("a30e177e-fef4-4975-889d-727e69f00367"),
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = new Guid("265a1979-4fd6-4943-8028-db6de7f5d294"),
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("eadd73f2-7172-4f60-a14a-f1ffa2fff75e"),
                            Name = "Norway"
                        },
                        new
                        {
                            Id = new Guid("c5040cc1-23f5-4173-88b8-826f94372784"),
                            Name = "Vietnam"
                        },
                        new
                        {
                            Id = new Guid("2c20dafa-290d-4663-acd0-1042e672ef80"),
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = new Guid("aec7f58d-20e5-4195-830b-531669a4a9b9"),
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = new Guid("a021c359-8d8f-4e6f-86cf-51e4ee770881"),
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = new Guid("4da55175-ad52-4c06-886f-299ffe618c36"),
                            Name = "Italy"
                        },
                        new
                        {
                            Id = new Guid("75dcd23a-cba2-4971-9acf-c5558d6e8b93"),
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = new Guid("cde450e1-5720-438d-ae66-bba74ea23255"),
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = new Guid("36944af7-82b6-4604-bae7-d3f6bc11f5aa"),
                            Name = "New Zealand"
                        },
                        new
                        {
                            Id = new Guid("78ba0fcd-79cc-4353-aa1b-118f734cd7ea"),
                            Name = "Kenya"
                        },
                        new
                        {
                            Id = new Guid("370448fb-cb9d-45d2-8820-cd76b08144ff"),
                            Name = "Spain"
                        },
                        new
                        {
                            Id = new Guid("f8925a58-85a1-4f1d-811e-2f4fc27e1c12"),
                            Name = "Greece"
                        },
                        new
                        {
                            Id = new Guid("5d855eb1-d0dd-4498-9853-2b9d802f8e0f"),
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = new Guid("43abf536-f100-4755-9402-4948874ea9d8"),
                            Name = "Switzerland"
                        },
                        new
                        {
                            Id = new Guid("f89d5d8e-8bb8-4dcc-b988-b2b935cc5b55"),
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("f6fd639e-50ee-47bc-9f67-731c0772c74c"),
                            Name = "Austria"
                        },
                        new
                        {
                            Id = new Guid("3e93f46f-b637-468e-ad95-c67094408dcd"),
                            Name = "Denmark"
                        },
                        new
                        {
                            Id = new Guid("3b0b7447-8d63-4789-8ab2-d1fea6a03ab1"),
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = new Guid("1a290a95-c0b6-466b-946c-2d1f76afb406"),
                            Name = "Poland"
                        },
                        new
                        {
                            Id = new Guid("785a587c-3047-4a04-82f8-c7b0f2307869"),
                            Name = "Czech Republic"
                        },
                        new
                        {
                            Id = new Guid("e403c5f2-3da8-4f8e-911e-a1469e8a1cae"),
                            Name = "Hungary"
                        },
                        new
                        {
                            Id = new Guid("8b01d71c-018e-404d-8523-08a8167b35c9"),
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = new Guid("788443a3-ed07-4136-8d01-0491581915f9"),
                            Name = "Finland"
                        });
                });

            modelBuilder.Entity("SmartHome.Data.Entities.EnvironmentalConditionsSensorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Connection")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DeviceStatus")
                        .HasColumnType("integer");

                    b.Property<int>("DeviceType")
                        .HasColumnType("integer");

                    b.Property<float>("EnergySpending")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PowerSupply")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EnvironmentalConditionsSensors");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.PropertyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("AreaSquareMeters")
                        .HasColumnType("double precision");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("NumberOfFloors")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.CountryEntity", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.EnvironmentalConditionsSensorEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.PropertyEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.CityEntity", "City")
                        .WithMany("Properties")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CountryEntity", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
