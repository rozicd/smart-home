// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartHome.Data;

#nullable disable

namespace SmartHome.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231118132946_asxxxx")]
    partial class asxxxx
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartHome.Data.Entities.ActivationTokenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("expires")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ActivationTokens");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d7c308ca-0875-40c0-a1a8-ca3b7ebf4915"),
                            CountryId = new Guid("2725b895-42ce-410f-b80e-e4ddbdd345bb"),
                            Name = "New York"
                        },
                        new
                        {
                            Id = new Guid("e36a0e8b-5f09-4e71-aa7b-860589c9f25c"),
                            CountryId = new Guid("2725b895-42ce-410f-b80e-e4ddbdd345bb"),
                            Name = "Los Angeles"
                        },
                        new
                        {
                            Id = new Guid("ea368080-2773-41c0-ae38-07cf8e75fc1b"),
                            CountryId = new Guid("2725b895-42ce-410f-b80e-e4ddbdd345bb"),
                            Name = "Chicago"
                        },
                        new
                        {
                            Id = new Guid("53d5a3e8-9cc0-40d4-97c7-bff5951c7d91"),
                            CountryId = new Guid("d3f3b863-4c07-463e-b76a-cd947a0b2a60"),
                            Name = "London"
                        },
                        new
                        {
                            Id = new Guid("fd24ddee-8393-4659-8adf-bdc4c505dca6"),
                            CountryId = new Guid("6b746f0f-328c-4995-8b67-3cae1ae51057"),
                            Name = "Paris"
                        },
                        new
                        {
                            Id = new Guid("21c5b8ef-c05e-48bb-92bd-f6397b29c19a"),
                            CountryId = new Guid("77dec13c-c2d2-4208-8d69-14bcc22f6a4e"),
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = new Guid("6f45cc8a-03c7-40ad-8fa5-735fe7c75028"),
                            CountryId = new Guid("0d43fce7-75bc-438a-8a09-575964351a12"),
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = new Guid("bc2f61a2-6f70-41f0-acfe-d396aca4e65b"),
                            CountryId = new Guid("ee70e78a-ef70-4abf-9a3b-0b5061247af8"),
                            Name = "Beijing"
                        },
                        new
                        {
                            Id = new Guid("930c8521-2724-4179-9914-54032131f396"),
                            CountryId = new Guid("964cd451-3feb-4796-b3d9-e04689400958"),
                            Name = "Sydney"
                        },
                        new
                        {
                            Id = new Guid("35b1788e-9279-428a-b62b-7a1e39e6107d"),
                            CountryId = new Guid("34d36cdb-c724-420a-9317-a4e83de77697"),
                            Name = "Toronto"
                        },
                        new
                        {
                            Id = new Guid("e869f7e3-45e5-45f4-8a58-64aace76beb8"),
                            CountryId = new Guid("8bd946bc-d213-4f7c-82e7-9278ba2140ef"),
                            Name = "Mumbai"
                        },
                        new
                        {
                            Id = new Guid("20634b8b-aea9-4c1d-a07e-b885bb87cf00"),
                            CountryId = new Guid("1ae0d5f5-ae63-4a09-9750-e1783b26f49b"),
                            Name = "Cape Town"
                        },
                        new
                        {
                            Id = new Guid("61fb9c0f-a069-42a3-891e-1eb563ffadcb"),
                            CountryId = new Guid("f487c9f0-0a9f-417e-a454-35930d955855"),
                            Name = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = new Guid("6a3b5095-0bc1-4be2-97f0-3e8316846372"),
                            CountryId = new Guid("73c0d932-9620-45fc-b3d5-9ba8894f792e"),
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = new Guid("e8e504bd-18f0-40b7-acd0-96d079ba4cff"),
                            CountryId = new Guid("5ebc28f3-3d86-4859-964f-2537f6d24c17"),
                            Name = "Dubai"
                        },
                        new
                        {
                            Id = new Guid("9e67e927-2882-4640-9118-64cf510a7f68"),
                            CountryId = new Guid("57e27d27-1015-458c-8b9e-40cb145340e4"),
                            Name = "Stockholm"
                        },
                        new
                        {
                            Id = new Guid("2f472ddf-e13d-4151-a19d-9cc7fa2638ed"),
                            CountryId = new Guid("cdb0ff20-f034-4fc7-9522-4c5852fc83d7"),
                            Name = "Seoul"
                        },
                        new
                        {
                            Id = new Guid("8e7302ff-f102-4644-bb00-f8d2c49ffe13"),
                            CountryId = new Guid("f76817ae-3f4a-440b-bd16-9b967b2f1757"),
                            Name = "Mexico City"
                        },
                        new
                        {
                            Id = new Guid("6b41d792-7f17-4354-adac-9c44e9bf72b3"),
                            CountryId = new Guid("47798cfe-eadb-4ddd-b0d0-80bd7c27a1d5"),
                            Name = "Amsterdam"
                        },
                        new
                        {
                            Id = new Guid("c863c1e8-2630-4def-bdef-542b30d1d0f9"),
                            CountryId = new Guid("39459f1a-0a97-47c6-8972-ad4518a529aa"),
                            Name = "Oslo"
                        },
                        new
                        {
                            Id = new Guid("73e220e1-597c-4d68-8e97-0bd41f56f187"),
                            CountryId = new Guid("75a357df-b2f2-4e36-9672-5ed49fa5a216"),
                            Name = "Hanoi"
                        },
                        new
                        {
                            Id = new Guid("a7e8cdaa-5222-40dc-9485-b19212ab9dd8"),
                            CountryId = new Guid("4982b453-f6cc-409f-9f52-457fba0eab50"),
                            Name = "Bangkok"
                        },
                        new
                        {
                            Id = new Guid("62523f1f-29a2-47cb-9fa8-b7faed3de756"),
                            CountryId = new Guid("c1133356-175b-465e-a635-ab17aa3948dd"),
                            Name = "Istanbul"
                        },
                        new
                        {
                            Id = new Guid("8a7655d7-7709-4cdd-b9fa-dd4eeac8c72c"),
                            CountryId = new Guid("d260f6f8-40cf-4761-8dcd-b3b647f490c2"),
                            Name = "Buenos Aires"
                        },
                        new
                        {
                            Id = new Guid("30d105fc-70bc-47d0-a19c-c0d3a6c61d36"),
                            CountryId = new Guid("660fbd9a-2888-4178-b1f5-051dcab7be81"),
                            Name = "Rome"
                        },
                        new
                        {
                            Id = new Guid("45e62b01-9c0f-458c-88ac-d309a96ee416"),
                            CountryId = new Guid("608a2cf4-17e6-4e51-8378-081f02803605"),
                            Name = "Cairo"
                        },
                        new
                        {
                            Id = new Guid("08f4ac6a-ab4f-4787-9845-46c116188bcc"),
                            CountryId = new Guid("c559b791-292f-4582-906b-04375ad81198"),
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("159c3abd-11af-4d62-9623-75c519c62594"),
                            CountryId = new Guid("e7e9cb07-350e-422f-8f92-ea0687f31f5b"),
                            Name = "Auckland"
                        },
                        new
                        {
                            Id = new Guid("7facf427-e8ce-40e9-bfaa-439e8c24f42c"),
                            CountryId = new Guid("d68edb7a-d1b4-4337-bc25-0717b22ea95e"),
                            Name = "Nairobi"
                        },
                        new
                        {
                            Id = new Guid("bc99cea2-4e51-48b1-8c3b-eaeff34309f8"),
                            CountryId = new Guid("66e74c4b-a5b5-46a2-aa9e-bca74869931b"),
                            Name = "Barcelona"
                        },
                        new
                        {
                            Id = new Guid("586dc8d8-f47e-4eb9-9613-371ac6394099"),
                            CountryId = new Guid("d2839d07-f126-47d5-abbb-ae3acaaf44f0"),
                            Name = "Athens"
                        },
                        new
                        {
                            Id = new Guid("e4bf38c1-a4d6-4e02-8fd1-d9c0e8f9028f"),
                            CountryId = new Guid("6c04f4e9-93af-4679-94d8-18f7b0e29d68"),
                            Name = "Dublin"
                        },
                        new
                        {
                            Id = new Guid("d47b74d3-f7db-4093-861a-aa15a227a900"),
                            CountryId = new Guid("e3336aa7-9698-4c91-9abc-32b997d71251"),
                            Name = "Zurich"
                        },
                        new
                        {
                            Id = new Guid("bec94132-b43a-4753-9f0e-e2bb17c25e64"),
                            CountryId = new Guid("564c3709-f823-4059-a0f5-d0b7bf4eb523"),
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("2dcbe67b-1fd1-48e1-8727-6767d5d65e3f"),
                            CountryId = new Guid("06d51e21-384b-4eaa-bce4-ab89e3802830"),
                            Name = "Vienna"
                        },
                        new
                        {
                            Id = new Guid("b90b568e-b28f-4b68-b0f6-ab65b7f25a05"),
                            CountryId = new Guid("ee70e78a-ef70-4abf-9a3b-0b5061247af8"),
                            Name = "Hong Kong"
                        },
                        new
                        {
                            Id = new Guid("520e1811-d7d0-4f2b-8167-ea74af73cc6d"),
                            CountryId = new Guid("3bf30b3a-3bff-4aab-80dd-32da1a69f4b4"),
                            Name = "Copenhagen"
                        },
                        new
                        {
                            Id = new Guid("bf4c5b6d-790d-4533-8d15-98cce6e34f1e"),
                            CountryId = new Guid("491c5d05-a10c-44c0-a381-ab56291f934f"),
                            Name = "Lisbon"
                        },
                        new
                        {
                            Id = new Guid("885815ae-1e13-4979-89da-23eaa421df29"),
                            CountryId = new Guid("a38cb3a1-fcce-46ca-9759-cacadbdc7d53"),
                            Name = "Warsaw"
                        },
                        new
                        {
                            Id = new Guid("7a609986-a5ae-4cba-9689-dd2b3773d075"),
                            CountryId = new Guid("9939997c-cc92-4fbb-ad17-93bc1959da49"),
                            Name = "Prague"
                        },
                        new
                        {
                            Id = new Guid("831302da-1308-491e-b6fa-64613f1be0ad"),
                            CountryId = new Guid("0cf8cace-9044-4a93-bd19-b320022f988d"),
                            Name = "Budapest"
                        },
                        new
                        {
                            Id = new Guid("53a64ef7-0cbf-4685-99c4-8ced2103d2c8"),
                            CountryId = new Guid("764c6feb-0e06-46b5-88da-749e0f9e4e53"),
                            Name = "Brussels"
                        },
                        new
                        {
                            Id = new Guid("822ae6e3-0279-4b99-8498-0d6e0033a985"),
                            CountryId = new Guid("852ed836-6d76-404d-b95f-d1ebff995899"),
                            Name = "Helsinki"
                        });
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CountryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2725b895-42ce-410f-b80e-e4ddbdd345bb"),
                            Name = "USA"
                        },
                        new
                        {
                            Id = new Guid("d3f3b863-4c07-463e-b76a-cd947a0b2a60"),
                            Name = "UK"
                        },
                        new
                        {
                            Id = new Guid("6b746f0f-328c-4995-8b67-3cae1ae51057"),
                            Name = "France"
                        },
                        new
                        {
                            Id = new Guid("77dec13c-c2d2-4208-8d69-14bcc22f6a4e"),
                            Name = "Germany"
                        },
                        new
                        {
                            Id = new Guid("0d43fce7-75bc-438a-8a09-575964351a12"),
                            Name = "Japan"
                        },
                        new
                        {
                            Id = new Guid("ee70e78a-ef70-4abf-9a3b-0b5061247af8"),
                            Name = "China"
                        },
                        new
                        {
                            Id = new Guid("964cd451-3feb-4796-b3d9-e04689400958"),
                            Name = "Australia"
                        },
                        new
                        {
                            Id = new Guid("34d36cdb-c724-420a-9317-a4e83de77697"),
                            Name = "Canada"
                        },
                        new
                        {
                            Id = new Guid("8bd946bc-d213-4f7c-82e7-9278ba2140ef"),
                            Name = "India"
                        },
                        new
                        {
                            Id = new Guid("1ae0d5f5-ae63-4a09-9750-e1783b26f49b"),
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = new Guid("f487c9f0-0a9f-417e-a454-35930d955855"),
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = new Guid("73c0d932-9620-45fc-b3d5-9ba8894f792e"),
                            Name = "Russia"
                        },
                        new
                        {
                            Id = new Guid("5ebc28f3-3d86-4859-964f-2537f6d24c17"),
                            Name = "UAE"
                        },
                        new
                        {
                            Id = new Guid("57e27d27-1015-458c-8b9e-40cb145340e4"),
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = new Guid("cdb0ff20-f034-4fc7-9522-4c5852fc83d7"),
                            Name = "South Korea"
                        },
                        new
                        {
                            Id = new Guid("f76817ae-3f4a-440b-bd16-9b967b2f1757"),
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = new Guid("47798cfe-eadb-4ddd-b0d0-80bd7c27a1d5"),
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("39459f1a-0a97-47c6-8972-ad4518a529aa"),
                            Name = "Norway"
                        },
                        new
                        {
                            Id = new Guid("75a357df-b2f2-4e36-9672-5ed49fa5a216"),
                            Name = "Vietnam"
                        },
                        new
                        {
                            Id = new Guid("4982b453-f6cc-409f-9f52-457fba0eab50"),
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = new Guid("c1133356-175b-465e-a635-ab17aa3948dd"),
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = new Guid("d260f6f8-40cf-4761-8dcd-b3b647f490c2"),
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = new Guid("660fbd9a-2888-4178-b1f5-051dcab7be81"),
                            Name = "Italy"
                        },
                        new
                        {
                            Id = new Guid("608a2cf4-17e6-4e51-8378-081f02803605"),
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = new Guid("c559b791-292f-4582-906b-04375ad81198"),
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = new Guid("e7e9cb07-350e-422f-8f92-ea0687f31f5b"),
                            Name = "New Zealand"
                        },
                        new
                        {
                            Id = new Guid("d68edb7a-d1b4-4337-bc25-0717b22ea95e"),
                            Name = "Kenya"
                        },
                        new
                        {
                            Id = new Guid("66e74c4b-a5b5-46a2-aa9e-bca74869931b"),
                            Name = "Spain"
                        },
                        new
                        {
                            Id = new Guid("d2839d07-f126-47d5-abbb-ae3acaaf44f0"),
                            Name = "Greece"
                        },
                        new
                        {
                            Id = new Guid("6c04f4e9-93af-4679-94d8-18f7b0e29d68"),
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = new Guid("e3336aa7-9698-4c91-9abc-32b997d71251"),
                            Name = "Switzerland"
                        },
                        new
                        {
                            Id = new Guid("564c3709-f823-4059-a0f5-d0b7bf4eb523"),
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("06d51e21-384b-4eaa-bce4-ab89e3802830"),
                            Name = "Austria"
                        },
                        new
                        {
                            Id = new Guid("3bf30b3a-3bff-4aab-80dd-32da1a69f4b4"),
                            Name = "Denmark"
                        },
                        new
                        {
                            Id = new Guid("491c5d05-a10c-44c0-a381-ab56291f934f"),
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = new Guid("a38cb3a1-fcce-46ca-9759-cacadbdc7d53"),
                            Name = "Poland"
                        },
                        new
                        {
                            Id = new Guid("9939997c-cc92-4fbb-ad17-93bc1959da49"),
                            Name = "Czech Republic"
                        },
                        new
                        {
                            Id = new Guid("0cf8cace-9044-4a93-bd19-b320022f988d"),
                            Name = "Hungary"
                        },
                        new
                        {
                            Id = new Guid("764c6feb-0e06-46b5-88da-749e0f9e4e53"),
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = new Guid("852ed836-6d76-404d-b95f-d1ebff995899"),
                            Name = "Finland"
                        });
                });

            modelBuilder.Entity("SmartHome.Data.Entities.PropertyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("AreaSquareMeters")
                        .HasColumnType("double precision");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("NumberOfFloors")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.SmartDeviceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Connection")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DeviceStatus")
                        .HasColumnType("integer");

                    b.Property<int>("DeviceType")
                        .HasColumnType("integer");

                    b.Property<float>("EnergySpending")
                        .HasColumnType("real");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PowerSupply")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SmartDevices");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SmartHome.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.EnvironmentalConditionsSensorEntity", b =>
                {
                    b.HasBaseType("SmartHome.Data.Entities.SmartDeviceEntity");

                    b.ToTable("EnvironmentalConditionsSensors", (string)null);
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.CountryEntity", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.PropertyEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.CityEntity", "City")
                        .WithMany("Properties")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.SmartDeviceEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.EnvironmentalConditionsSensorEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.SmartDeviceEntity", null)
                        .WithOne()
                        .HasForeignKey("SmartHome.Data.Entities.EnvironmentalConditionsSensorEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CountryEntity", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
