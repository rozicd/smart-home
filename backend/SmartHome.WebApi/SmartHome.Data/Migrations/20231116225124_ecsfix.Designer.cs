// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartHome.Data;

#nullable disable

namespace SmartHome.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231116225124_ecsfix")]
    partial class ecsfix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartHome.Data.Entities.ActivationTokenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("expires")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ActivationTokens");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8a83738c-5613-4d84-a6c3-d8f29fb69c1e"),
                            CountryId = new Guid("0cee95e9-9417-4066-9eb9-4b49622e2c13"),
                            Name = "New York"
                        },
                        new
                        {
                            Id = new Guid("2360a5e8-1a1c-417a-9910-96347077c942"),
                            CountryId = new Guid("0cee95e9-9417-4066-9eb9-4b49622e2c13"),
                            Name = "Los Angeles"
                        },
                        new
                        {
                            Id = new Guid("6ca14b6b-8d5e-46dd-bc98-274fed6af9ca"),
                            CountryId = new Guid("0cee95e9-9417-4066-9eb9-4b49622e2c13"),
                            Name = "Chicago"
                        },
                        new
                        {
                            Id = new Guid("70d76b32-386c-4b6c-a37c-fb25cff74fb0"),
                            CountryId = new Guid("dfa27aa3-14b8-4f77-97e2-bc02193f5b55"),
                            Name = "London"
                        },
                        new
                        {
                            Id = new Guid("3b483a52-a149-44d6-9d87-1f82afc7df9b"),
                            CountryId = new Guid("d83df9c0-bfa5-4877-b3ee-582659c1c3a0"),
                            Name = "Paris"
                        },
                        new
                        {
                            Id = new Guid("823e504f-11e0-4132-b6d8-1704b3dd65a5"),
                            CountryId = new Guid("f1f89772-ea0f-4138-8be2-0406918275f5"),
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = new Guid("5bd93349-c95e-4168-be77-c44fddb35877"),
                            CountryId = new Guid("e5f585a7-5098-4105-bfcd-3402b7c18ef7"),
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = new Guid("4167a382-133d-4146-a99b-fb7eb1212fd4"),
                            CountryId = new Guid("41c7c074-278a-48f1-ab3e-962c7b205e83"),
                            Name = "Beijing"
                        },
                        new
                        {
                            Id = new Guid("dd5dd9c8-95b9-4236-9404-a90552281c37"),
                            CountryId = new Guid("2589e0cc-e0ef-48cb-8cef-4a475334e43e"),
                            Name = "Sydney"
                        },
                        new
                        {
                            Id = new Guid("fc64e09d-2415-4cad-9a97-a3a9bc50b654"),
                            CountryId = new Guid("712bf4ad-6672-4463-99b8-27209e163699"),
                            Name = "Toronto"
                        },
                        new
                        {
                            Id = new Guid("8b79c386-1842-4181-ba48-4483df306355"),
                            CountryId = new Guid("bbde1cc2-c54c-46a5-8909-d9c5cf8c5a8f"),
                            Name = "Mumbai"
                        },
                        new
                        {
                            Id = new Guid("5fc84993-31b3-4024-878c-d0a2f24a75e5"),
                            CountryId = new Guid("60c031b0-3312-4cb6-926a-01492ab2fb9c"),
                            Name = "Cape Town"
                        },
                        new
                        {
                            Id = new Guid("157554a6-5d56-43bb-b613-227215664005"),
                            CountryId = new Guid("db8015ea-ab8b-47f0-b50a-e51292f8cfff"),
                            Name = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = new Guid("cea59a13-4138-4a50-96d8-d2490e5acbf2"),
                            CountryId = new Guid("21ef19c9-62ae-454d-8fdb-3659d1b633a4"),
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = new Guid("574fe3aa-d43c-4447-865c-b1df3dca408a"),
                            CountryId = new Guid("270feb8f-17c8-449f-8b68-8ac43ca47a01"),
                            Name = "Dubai"
                        },
                        new
                        {
                            Id = new Guid("6e3c43db-44ed-492c-8023-46f3428c20b5"),
                            CountryId = new Guid("01ea3d25-f233-4a90-8a5a-5634fb45f24c"),
                            Name = "Stockholm"
                        },
                        new
                        {
                            Id = new Guid("d53b10b6-f8ec-4f40-8462-b50b2a826491"),
                            CountryId = new Guid("19764850-4919-4da5-8ab1-86cda55434d1"),
                            Name = "Seoul"
                        },
                        new
                        {
                            Id = new Guid("96470867-546f-4462-b743-3df0b2cf7419"),
                            CountryId = new Guid("a7e5f493-4f53-4a7b-9c2e-ba66cfbc2e01"),
                            Name = "Mexico City"
                        },
                        new
                        {
                            Id = new Guid("88b9ffbf-05c2-45a7-b9b3-59548bbb1929"),
                            CountryId = new Guid("68a2bd45-268a-46b8-8926-2c32425ae1de"),
                            Name = "Amsterdam"
                        },
                        new
                        {
                            Id = new Guid("6f5a9347-5970-4e1d-a6a6-5119c699ccd3"),
                            CountryId = new Guid("f5ba25d1-8180-4c1c-8c4f-ee9da8ad3878"),
                            Name = "Oslo"
                        },
                        new
                        {
                            Id = new Guid("905784fe-9620-4f72-9d4c-8753864ca94d"),
                            CountryId = new Guid("38a8a5ab-c6ff-452b-bbda-c1a8639106ba"),
                            Name = "Hanoi"
                        },
                        new
                        {
                            Id = new Guid("a44955dc-5371-41cd-ad5e-5b2c4d8cd7c5"),
                            CountryId = new Guid("b9943703-1ac0-4d15-97ea-29b369c78d90"),
                            Name = "Bangkok"
                        },
                        new
                        {
                            Id = new Guid("5c42ddc4-ab5f-4ee9-b5a7-31002010501b"),
                            CountryId = new Guid("69f1ec39-8508-4942-bf13-2d86267158c7"),
                            Name = "Istanbul"
                        },
                        new
                        {
                            Id = new Guid("01a0948e-5811-439b-8cb3-b65cd27eb90f"),
                            CountryId = new Guid("ed45cb2f-5364-4a7f-99e9-d8568083fc96"),
                            Name = "Buenos Aires"
                        },
                        new
                        {
                            Id = new Guid("365c57cc-0b4f-474b-ad39-235472d41053"),
                            CountryId = new Guid("4cdf9df8-5013-4906-8f15-a9a02bed3fae"),
                            Name = "Rome"
                        },
                        new
                        {
                            Id = new Guid("f022b6ed-4908-40a7-9e7f-95f5516e930a"),
                            CountryId = new Guid("aef33b82-4978-4b19-bcc9-76e197206d09"),
                            Name = "Cairo"
                        },
                        new
                        {
                            Id = new Guid("9ef5bb89-fa4a-4a4a-8609-4b1c957203fe"),
                            CountryId = new Guid("dd4bc7f7-644e-4d81-b94a-ac6c1531f7ee"),
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("f100a6f6-d7c2-4e12-9693-43fbc13f9ad1"),
                            CountryId = new Guid("bec4ca57-f1d2-45ae-b5b0-e373d7e4d95b"),
                            Name = "Auckland"
                        },
                        new
                        {
                            Id = new Guid("5081a03d-ceaa-4a0e-b098-ac8002362596"),
                            CountryId = new Guid("d21512a8-5216-47d4-b9c7-0fe2829d3607"),
                            Name = "Nairobi"
                        },
                        new
                        {
                            Id = new Guid("e508a17a-66ef-44c7-bdb8-7c150a83ac0c"),
                            CountryId = new Guid("1e3296eb-0cee-4702-bcee-b5ca88daa9b3"),
                            Name = "Barcelona"
                        },
                        new
                        {
                            Id = new Guid("725f1fdb-174c-462f-9374-d3fd0ca2e55a"),
                            CountryId = new Guid("42a5d641-0bc8-498e-8112-033f58355556"),
                            Name = "Athens"
                        },
                        new
                        {
                            Id = new Guid("00509613-f1ec-4784-a0f7-726b319a2e05"),
                            CountryId = new Guid("fdec6670-84b2-444c-bc93-b3670bdc4630"),
                            Name = "Dublin"
                        },
                        new
                        {
                            Id = new Guid("72e89d72-e285-4ca7-a9fe-e36e951fec9f"),
                            CountryId = new Guid("a4ef9350-0dca-4679-822e-afda10c52270"),
                            Name = "Zurich"
                        },
                        new
                        {
                            Id = new Guid("c7061e00-0fff-4415-8fc8-0408c5320a11"),
                            CountryId = new Guid("3d72b757-9c0c-4125-8ce5-b72a8bf3a01c"),
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("91be4929-29d8-4fa0-8084-b58f74418063"),
                            CountryId = new Guid("763b266f-a732-4aad-b677-15ad25c0884b"),
                            Name = "Vienna"
                        },
                        new
                        {
                            Id = new Guid("7ee05b12-c8a5-4afd-8cba-d111643d3022"),
                            CountryId = new Guid("41c7c074-278a-48f1-ab3e-962c7b205e83"),
                            Name = "Hong Kong"
                        },
                        new
                        {
                            Id = new Guid("3dbc6e31-7e18-47ed-b648-818f3fe37610"),
                            CountryId = new Guid("9c5a0a6b-ca49-4403-a3b9-7029a6ce6b57"),
                            Name = "Copenhagen"
                        },
                        new
                        {
                            Id = new Guid("389c0934-16c9-4ba3-8f8e-3ac6a174dbc2"),
                            CountryId = new Guid("acf3b45f-8016-416a-a85d-76fab1e7e195"),
                            Name = "Lisbon"
                        },
                        new
                        {
                            Id = new Guid("92489f30-9e40-4054-85d0-3b3898fa1446"),
                            CountryId = new Guid("ab601e65-8cfe-4f02-ab93-bfac1565749e"),
                            Name = "Warsaw"
                        },
                        new
                        {
                            Id = new Guid("385f3f17-f098-4047-81f0-adfba98413e3"),
                            CountryId = new Guid("42e4e8ed-4d2f-44f4-9e5a-ce9d214686d9"),
                            Name = "Prague"
                        },
                        new
                        {
                            Id = new Guid("2a7b72f8-092b-4693-a18b-bff7889a47a5"),
                            CountryId = new Guid("36fda027-f8a9-4a32-9558-dbb315cc07ba"),
                            Name = "Budapest"
                        },
                        new
                        {
                            Id = new Guid("12a3e5ae-80af-4627-8335-73b4ea2e127c"),
                            CountryId = new Guid("10ddd8a1-870b-40d2-95bc-1065aa570f0c"),
                            Name = "Brussels"
                        },
                        new
                        {
                            Id = new Guid("debebac5-2f5a-475c-a1bd-4e3cfb0d39a4"),
                            CountryId = new Guid("873dc26d-867f-4ad6-b996-6f328844f8b5"),
                            Name = "Helsinki"
                        });
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CountryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0cee95e9-9417-4066-9eb9-4b49622e2c13"),
                            Name = "USA"
                        },
                        new
                        {
                            Id = new Guid("dfa27aa3-14b8-4f77-97e2-bc02193f5b55"),
                            Name = "UK"
                        },
                        new
                        {
                            Id = new Guid("d83df9c0-bfa5-4877-b3ee-582659c1c3a0"),
                            Name = "France"
                        },
                        new
                        {
                            Id = new Guid("f1f89772-ea0f-4138-8be2-0406918275f5"),
                            Name = "Germany"
                        },
                        new
                        {
                            Id = new Guid("e5f585a7-5098-4105-bfcd-3402b7c18ef7"),
                            Name = "Japan"
                        },
                        new
                        {
                            Id = new Guid("41c7c074-278a-48f1-ab3e-962c7b205e83"),
                            Name = "China"
                        },
                        new
                        {
                            Id = new Guid("2589e0cc-e0ef-48cb-8cef-4a475334e43e"),
                            Name = "Australia"
                        },
                        new
                        {
                            Id = new Guid("712bf4ad-6672-4463-99b8-27209e163699"),
                            Name = "Canada"
                        },
                        new
                        {
                            Id = new Guid("bbde1cc2-c54c-46a5-8909-d9c5cf8c5a8f"),
                            Name = "India"
                        },
                        new
                        {
                            Id = new Guid("60c031b0-3312-4cb6-926a-01492ab2fb9c"),
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = new Guid("db8015ea-ab8b-47f0-b50a-e51292f8cfff"),
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = new Guid("21ef19c9-62ae-454d-8fdb-3659d1b633a4"),
                            Name = "Russia"
                        },
                        new
                        {
                            Id = new Guid("270feb8f-17c8-449f-8b68-8ac43ca47a01"),
                            Name = "UAE"
                        },
                        new
                        {
                            Id = new Guid("01ea3d25-f233-4a90-8a5a-5634fb45f24c"),
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = new Guid("19764850-4919-4da5-8ab1-86cda55434d1"),
                            Name = "South Korea"
                        },
                        new
                        {
                            Id = new Guid("a7e5f493-4f53-4a7b-9c2e-ba66cfbc2e01"),
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = new Guid("68a2bd45-268a-46b8-8926-2c32425ae1de"),
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("f5ba25d1-8180-4c1c-8c4f-ee9da8ad3878"),
                            Name = "Norway"
                        },
                        new
                        {
                            Id = new Guid("38a8a5ab-c6ff-452b-bbda-c1a8639106ba"),
                            Name = "Vietnam"
                        },
                        new
                        {
                            Id = new Guid("b9943703-1ac0-4d15-97ea-29b369c78d90"),
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = new Guid("69f1ec39-8508-4942-bf13-2d86267158c7"),
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = new Guid("ed45cb2f-5364-4a7f-99e9-d8568083fc96"),
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = new Guid("4cdf9df8-5013-4906-8f15-a9a02bed3fae"),
                            Name = "Italy"
                        },
                        new
                        {
                            Id = new Guid("aef33b82-4978-4b19-bcc9-76e197206d09"),
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = new Guid("dd4bc7f7-644e-4d81-b94a-ac6c1531f7ee"),
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = new Guid("bec4ca57-f1d2-45ae-b5b0-e373d7e4d95b"),
                            Name = "New Zealand"
                        },
                        new
                        {
                            Id = new Guid("d21512a8-5216-47d4-b9c7-0fe2829d3607"),
                            Name = "Kenya"
                        },
                        new
                        {
                            Id = new Guid("1e3296eb-0cee-4702-bcee-b5ca88daa9b3"),
                            Name = "Spain"
                        },
                        new
                        {
                            Id = new Guid("42a5d641-0bc8-498e-8112-033f58355556"),
                            Name = "Greece"
                        },
                        new
                        {
                            Id = new Guid("fdec6670-84b2-444c-bc93-b3670bdc4630"),
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = new Guid("a4ef9350-0dca-4679-822e-afda10c52270"),
                            Name = "Switzerland"
                        },
                        new
                        {
                            Id = new Guid("3d72b757-9c0c-4125-8ce5-b72a8bf3a01c"),
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("763b266f-a732-4aad-b677-15ad25c0884b"),
                            Name = "Austria"
                        },
                        new
                        {
                            Id = new Guid("9c5a0a6b-ca49-4403-a3b9-7029a6ce6b57"),
                            Name = "Denmark"
                        },
                        new
                        {
                            Id = new Guid("acf3b45f-8016-416a-a85d-76fab1e7e195"),
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = new Guid("ab601e65-8cfe-4f02-ab93-bfac1565749e"),
                            Name = "Poland"
                        },
                        new
                        {
                            Id = new Guid("42e4e8ed-4d2f-44f4-9e5a-ce9d214686d9"),
                            Name = "Czech Republic"
                        },
                        new
                        {
                            Id = new Guid("36fda027-f8a9-4a32-9558-dbb315cc07ba"),
                            Name = "Hungary"
                        },
                        new
                        {
                            Id = new Guid("10ddd8a1-870b-40d2-95bc-1065aa570f0c"),
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = new Guid("873dc26d-867f-4ad6-b996-6f328844f8b5"),
                            Name = "Finland"
                        });
                });

            modelBuilder.Entity("SmartHome.Data.Entities.EnvironmentalConditionsSensorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Connection")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DeviceStatus")
                        .HasColumnType("integer");

                    b.Property<int>("DeviceType")
                        .HasColumnType("integer");

                    b.Property<float>("EnergySpending")
                        .HasColumnType("real");

                    b.Property<int>("PowerSupply")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EnvironmentalConditionsSensors");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.PropertyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("AreaSquareMeters")
                        .HasColumnType("double precision");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("NumberOfFloors")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.CountryEntity", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.EnvironmentalConditionsSensorEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.PropertyEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.CityEntity", "City")
                        .WithMany("Properties")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CountryEntity", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
