// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartHome.Data;

#nullable disable

namespace SmartHome.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231118131938_asx")]
    partial class asx
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartHome.Data.Entities.ActivationTokenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("expires")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ActivationTokens");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("468a7c6f-f359-4f56-a465-a85959b33949"),
                            CountryId = new Guid("2b86dc14-7878-494f-b958-e797b89b5fc2"),
                            Name = "New York"
                        },
                        new
                        {
                            Id = new Guid("47e40f1f-6791-40cd-9d55-231436d49c09"),
                            CountryId = new Guid("2b86dc14-7878-494f-b958-e797b89b5fc2"),
                            Name = "Los Angeles"
                        },
                        new
                        {
                            Id = new Guid("0ee723c0-e133-4a95-b5e7-949a4fbc6d74"),
                            CountryId = new Guid("2b86dc14-7878-494f-b958-e797b89b5fc2"),
                            Name = "Chicago"
                        },
                        new
                        {
                            Id = new Guid("a85c418e-5782-4522-a73c-fff8d4245ef9"),
                            CountryId = new Guid("9022e7fc-1af5-4436-b47a-0ebc12e0a7ba"),
                            Name = "London"
                        },
                        new
                        {
                            Id = new Guid("395914b3-d096-4e4d-884d-e77dc0e4661e"),
                            CountryId = new Guid("9e6d0643-53c2-4915-858b-febe346b4765"),
                            Name = "Paris"
                        },
                        new
                        {
                            Id = new Guid("1ce34eb5-ca67-4ae4-a72d-e3173a7a0551"),
                            CountryId = new Guid("ec57a5aa-e50b-4605-94f3-c5ce12fcf43e"),
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = new Guid("58672a50-4aaf-4caa-be40-785094befcf3"),
                            CountryId = new Guid("6c6fe3cb-db70-418b-8028-0884e2e5f2f3"),
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = new Guid("b6cdead3-df1d-4ac7-b1ab-3488de7d4687"),
                            CountryId = new Guid("06b43574-4cb3-4a67-b14b-9546196b3fa2"),
                            Name = "Beijing"
                        },
                        new
                        {
                            Id = new Guid("18b8bb8e-e458-42d3-82d1-9e41a0b58706"),
                            CountryId = new Guid("152f17fb-79e2-44d8-86dd-d8efb1fe1a78"),
                            Name = "Sydney"
                        },
                        new
                        {
                            Id = new Guid("e10ef7c7-a764-4989-b25b-9b2ee8bb55f1"),
                            CountryId = new Guid("5812007b-90e0-44eb-b7cf-39a2660f852c"),
                            Name = "Toronto"
                        },
                        new
                        {
                            Id = new Guid("998ea7a5-0d15-4d8a-bfd4-c026d1f1f82c"),
                            CountryId = new Guid("1de329a0-2816-423a-84a2-f6a97549b3c9"),
                            Name = "Mumbai"
                        },
                        new
                        {
                            Id = new Guid("38827d41-0d81-4979-9caa-94ead815cb48"),
                            CountryId = new Guid("0c7e623d-de8c-47b8-9029-049ba388b46f"),
                            Name = "Cape Town"
                        },
                        new
                        {
                            Id = new Guid("849cfd7a-824e-4464-94ff-c6cf4ce720b2"),
                            CountryId = new Guid("094b5da8-7a19-4291-b987-3e5dced5f059"),
                            Name = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = new Guid("20a30bb5-a7dc-4664-b147-13781161015c"),
                            CountryId = new Guid("4d53d04f-4b28-46d5-b20b-6b4841667ba8"),
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = new Guid("f5b42cd1-4d0b-4ab9-978b-402def5ef95f"),
                            CountryId = new Guid("4090c727-c295-477c-aafd-ca7fa8120e78"),
                            Name = "Dubai"
                        },
                        new
                        {
                            Id = new Guid("6a95c3a0-980a-4f86-afc9-78683cb614d5"),
                            CountryId = new Guid("ddbf702d-5761-46ac-9cc5-c908df8e24a8"),
                            Name = "Stockholm"
                        },
                        new
                        {
                            Id = new Guid("1a223591-2ddf-48f0-9211-c30b9227bbc5"),
                            CountryId = new Guid("4eba6996-319e-4a77-aab9-36a10aaf870d"),
                            Name = "Seoul"
                        },
                        new
                        {
                            Id = new Guid("d1a5be71-f597-42ca-9f92-d2b2d52280e4"),
                            CountryId = new Guid("249ddede-af56-4214-b252-1ef6a3be7bae"),
                            Name = "Mexico City"
                        },
                        new
                        {
                            Id = new Guid("9b9e58e3-1a1c-4c79-a199-4350eae3252d"),
                            CountryId = new Guid("8162009d-ca0c-4867-bf74-0729cdea38a0"),
                            Name = "Amsterdam"
                        },
                        new
                        {
                            Id = new Guid("d88c0a89-8ee1-4fbf-9518-af9cada14755"),
                            CountryId = new Guid("7103a8a2-6d2e-433e-8ed8-c59a4fa80f15"),
                            Name = "Oslo"
                        },
                        new
                        {
                            Id = new Guid("1208dc22-8f3d-4967-80f5-8a4358eb7f8a"),
                            CountryId = new Guid("43a99cc1-d349-45f1-9c7d-fd8d1e96428f"),
                            Name = "Hanoi"
                        },
                        new
                        {
                            Id = new Guid("2382247c-a7e2-4fb7-b1a4-4686022a3baf"),
                            CountryId = new Guid("acdbd3b1-655d-442b-99c4-866bdb5a95b5"),
                            Name = "Bangkok"
                        },
                        new
                        {
                            Id = new Guid("639ecea0-cd3e-4a01-a7be-fd559ceef989"),
                            CountryId = new Guid("81596874-988d-4c89-9247-333d9fbd74dd"),
                            Name = "Istanbul"
                        },
                        new
                        {
                            Id = new Guid("6ec7a511-21ba-4daa-bf4a-aea29567e1ab"),
                            CountryId = new Guid("714e2821-1325-4355-bb31-a7357e205932"),
                            Name = "Buenos Aires"
                        },
                        new
                        {
                            Id = new Guid("a970bb28-5193-43e9-a81f-f808af72ba61"),
                            CountryId = new Guid("b35988c3-2502-4622-a748-f5ad69b554aa"),
                            Name = "Rome"
                        },
                        new
                        {
                            Id = new Guid("e6780323-d51d-4b58-87b0-c098944b6831"),
                            CountryId = new Guid("0da5653f-021a-41d1-baef-3a820e554831"),
                            Name = "Cairo"
                        },
                        new
                        {
                            Id = new Guid("762b3530-e016-435e-8fa0-31c4e39c437e"),
                            CountryId = new Guid("d69a7d76-c2b8-4a0f-be21-9542264dc6ba"),
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("96bebaa9-2f13-43f8-bce3-ec9ab0b117a4"),
                            CountryId = new Guid("cdee8502-e94b-42f9-a3c2-d784de2f5214"),
                            Name = "Auckland"
                        },
                        new
                        {
                            Id = new Guid("60a63ab7-4e32-470b-8363-451728372574"),
                            CountryId = new Guid("b3a76afc-5d0e-4ad1-804b-574b00ef38f9"),
                            Name = "Nairobi"
                        },
                        new
                        {
                            Id = new Guid("407548bd-2bba-4ed5-ac7c-7ba1e8f1be1c"),
                            CountryId = new Guid("a87955b2-2618-46e7-9135-578f73ad6a49"),
                            Name = "Barcelona"
                        },
                        new
                        {
                            Id = new Guid("64150bc5-ff60-4c39-85c1-d0600014e514"),
                            CountryId = new Guid("c1871859-963f-49b8-9fb9-5d69ea657b58"),
                            Name = "Athens"
                        },
                        new
                        {
                            Id = new Guid("190cc2ef-a17d-49ff-a423-3e88ba12fda3"),
                            CountryId = new Guid("82a38b43-2fc9-4151-a19f-4015f94d6493"),
                            Name = "Dublin"
                        },
                        new
                        {
                            Id = new Guid("b8f37e8a-83d8-4659-b1aa-d1c3b2a3509b"),
                            CountryId = new Guid("5ffdbebb-6cf0-4dbb-9868-cffeffe0e772"),
                            Name = "Zurich"
                        },
                        new
                        {
                            Id = new Guid("268b1eb3-a2a3-49e0-9e03-c1a4d871aa74"),
                            CountryId = new Guid("5ded7a9d-efbe-45b5-9afa-5417410d302a"),
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("f7c6cf4e-511b-42df-a660-e895b9b9d38e"),
                            CountryId = new Guid("21ca0b12-67d5-4753-8fe8-962f6c5e9236"),
                            Name = "Vienna"
                        },
                        new
                        {
                            Id = new Guid("17a0df9a-010e-4e62-afa8-cca2a93f2865"),
                            CountryId = new Guid("06b43574-4cb3-4a67-b14b-9546196b3fa2"),
                            Name = "Hong Kong"
                        },
                        new
                        {
                            Id = new Guid("91ce24b0-c524-4ea3-8cdf-691d074b9ab5"),
                            CountryId = new Guid("425dc9c3-bdc6-4320-8f4b-47b32f08c8b8"),
                            Name = "Copenhagen"
                        },
                        new
                        {
                            Id = new Guid("c5546f47-9b38-45e9-9a86-97e00055ce67"),
                            CountryId = new Guid("2bcf94de-cc9c-49e4-b8ec-220cf601b1fa"),
                            Name = "Lisbon"
                        },
                        new
                        {
                            Id = new Guid("8dc9c0ef-8e1f-4333-bd0f-42cd4ddd0c26"),
                            CountryId = new Guid("313f63b1-16b4-406f-a67f-9af6bb92e5ac"),
                            Name = "Warsaw"
                        },
                        new
                        {
                            Id = new Guid("d6753720-af77-4cdf-9636-303b72ef8b7a"),
                            CountryId = new Guid("04eb8241-8fb2-480f-9ee8-0432d5e4b35d"),
                            Name = "Prague"
                        },
                        new
                        {
                            Id = new Guid("7e5bf240-d6a8-4591-a523-d7e07224dab6"),
                            CountryId = new Guid("a8dbbaa0-2e85-4d0f-b4de-ee894acf39d4"),
                            Name = "Budapest"
                        },
                        new
                        {
                            Id = new Guid("71530b18-0f95-428b-9b96-a74d4f9583f5"),
                            CountryId = new Guid("34ee40aa-c2f3-49c4-bd3e-2759e0da0d30"),
                            Name = "Brussels"
                        },
                        new
                        {
                            Id = new Guid("739845f2-c4ba-40d3-8d6b-2cfbd93057b8"),
                            CountryId = new Guid("5cd90fb4-2efb-49ed-beb2-3f1d7eba3b0d"),
                            Name = "Helsinki"
                        });
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CountryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b86dc14-7878-494f-b958-e797b89b5fc2"),
                            Name = "USA"
                        },
                        new
                        {
                            Id = new Guid("9022e7fc-1af5-4436-b47a-0ebc12e0a7ba"),
                            Name = "UK"
                        },
                        new
                        {
                            Id = new Guid("9e6d0643-53c2-4915-858b-febe346b4765"),
                            Name = "France"
                        },
                        new
                        {
                            Id = new Guid("ec57a5aa-e50b-4605-94f3-c5ce12fcf43e"),
                            Name = "Germany"
                        },
                        new
                        {
                            Id = new Guid("6c6fe3cb-db70-418b-8028-0884e2e5f2f3"),
                            Name = "Japan"
                        },
                        new
                        {
                            Id = new Guid("06b43574-4cb3-4a67-b14b-9546196b3fa2"),
                            Name = "China"
                        },
                        new
                        {
                            Id = new Guid("152f17fb-79e2-44d8-86dd-d8efb1fe1a78"),
                            Name = "Australia"
                        },
                        new
                        {
                            Id = new Guid("5812007b-90e0-44eb-b7cf-39a2660f852c"),
                            Name = "Canada"
                        },
                        new
                        {
                            Id = new Guid("1de329a0-2816-423a-84a2-f6a97549b3c9"),
                            Name = "India"
                        },
                        new
                        {
                            Id = new Guid("0c7e623d-de8c-47b8-9029-049ba388b46f"),
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = new Guid("094b5da8-7a19-4291-b987-3e5dced5f059"),
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = new Guid("4d53d04f-4b28-46d5-b20b-6b4841667ba8"),
                            Name = "Russia"
                        },
                        new
                        {
                            Id = new Guid("4090c727-c295-477c-aafd-ca7fa8120e78"),
                            Name = "UAE"
                        },
                        new
                        {
                            Id = new Guid("ddbf702d-5761-46ac-9cc5-c908df8e24a8"),
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = new Guid("4eba6996-319e-4a77-aab9-36a10aaf870d"),
                            Name = "South Korea"
                        },
                        new
                        {
                            Id = new Guid("249ddede-af56-4214-b252-1ef6a3be7bae"),
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = new Guid("8162009d-ca0c-4867-bf74-0729cdea38a0"),
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("7103a8a2-6d2e-433e-8ed8-c59a4fa80f15"),
                            Name = "Norway"
                        },
                        new
                        {
                            Id = new Guid("43a99cc1-d349-45f1-9c7d-fd8d1e96428f"),
                            Name = "Vietnam"
                        },
                        new
                        {
                            Id = new Guid("acdbd3b1-655d-442b-99c4-866bdb5a95b5"),
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = new Guid("81596874-988d-4c89-9247-333d9fbd74dd"),
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = new Guid("714e2821-1325-4355-bb31-a7357e205932"),
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = new Guid("b35988c3-2502-4622-a748-f5ad69b554aa"),
                            Name = "Italy"
                        },
                        new
                        {
                            Id = new Guid("0da5653f-021a-41d1-baef-3a820e554831"),
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = new Guid("d69a7d76-c2b8-4a0f-be21-9542264dc6ba"),
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = new Guid("cdee8502-e94b-42f9-a3c2-d784de2f5214"),
                            Name = "New Zealand"
                        },
                        new
                        {
                            Id = new Guid("b3a76afc-5d0e-4ad1-804b-574b00ef38f9"),
                            Name = "Kenya"
                        },
                        new
                        {
                            Id = new Guid("a87955b2-2618-46e7-9135-578f73ad6a49"),
                            Name = "Spain"
                        },
                        new
                        {
                            Id = new Guid("c1871859-963f-49b8-9fb9-5d69ea657b58"),
                            Name = "Greece"
                        },
                        new
                        {
                            Id = new Guid("82a38b43-2fc9-4151-a19f-4015f94d6493"),
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = new Guid("5ffdbebb-6cf0-4dbb-9868-cffeffe0e772"),
                            Name = "Switzerland"
                        },
                        new
                        {
                            Id = new Guid("5ded7a9d-efbe-45b5-9afa-5417410d302a"),
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("21ca0b12-67d5-4753-8fe8-962f6c5e9236"),
                            Name = "Austria"
                        },
                        new
                        {
                            Id = new Guid("425dc9c3-bdc6-4320-8f4b-47b32f08c8b8"),
                            Name = "Denmark"
                        },
                        new
                        {
                            Id = new Guid("2bcf94de-cc9c-49e4-b8ec-220cf601b1fa"),
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = new Guid("313f63b1-16b4-406f-a67f-9af6bb92e5ac"),
                            Name = "Poland"
                        },
                        new
                        {
                            Id = new Guid("04eb8241-8fb2-480f-9ee8-0432d5e4b35d"),
                            Name = "Czech Republic"
                        },
                        new
                        {
                            Id = new Guid("a8dbbaa0-2e85-4d0f-b4de-ee894acf39d4"),
                            Name = "Hungary"
                        },
                        new
                        {
                            Id = new Guid("34ee40aa-c2f3-49c4-bd3e-2759e0da0d30"),
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = new Guid("5cd90fb4-2efb-49ed-beb2-3f1d7eba3b0d"),
                            Name = "Finland"
                        });
                });

            modelBuilder.Entity("SmartHome.Data.Entities.PropertyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("AreaSquareMeters")
                        .HasColumnType("double precision");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("NumberOfFloors")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.SmartDeviceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Connection")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DeviceStatus")
                        .HasColumnType("integer");

                    b.Property<int>("DeviceType")
                        .HasColumnType("integer");

                    b.Property<float>("EnergySpending")
                        .HasColumnType("real");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PowerSupply")
                        .HasColumnType("integer");

                    b.Property<string>("SmartDeviceType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SmartDevices", (string)null);

                    b.HasDiscriminator<string>("SmartDeviceType").HasValue("SmartDeviceEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SmartHome.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.EnvironmentalConditionsSensorEntity", b =>
                {
                    b.HasBaseType("SmartHome.Data.Entities.SmartDeviceEntity");

                    b.HasDiscriminator().HasValue("EnvironmentalConditionsSensor");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.CountryEntity", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.PropertyEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.CityEntity", "City")
                        .WithMany("Properties")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.SmartDeviceEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CountryEntity", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
