// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartHome.Data;

#nullable disable

namespace SmartHome.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231118132332_asxx")]
    partial class asxx
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartHome.Data.Entities.ActivationTokenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("expires")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ActivationTokens");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a45951c8-d35d-499e-ab35-7f5638169371"),
                            CountryId = new Guid("a8cad485-726f-490b-9221-35afd49ee6b5"),
                            Name = "New York"
                        },
                        new
                        {
                            Id = new Guid("1cb64bd1-9de0-42f8-a0df-b2f0752bb89c"),
                            CountryId = new Guid("a8cad485-726f-490b-9221-35afd49ee6b5"),
                            Name = "Los Angeles"
                        },
                        new
                        {
                            Id = new Guid("efe3c189-f1b7-4559-bf94-508435d24f24"),
                            CountryId = new Guid("a8cad485-726f-490b-9221-35afd49ee6b5"),
                            Name = "Chicago"
                        },
                        new
                        {
                            Id = new Guid("cf516d9f-c1e2-49a4-abc3-c5eedc5b0a58"),
                            CountryId = new Guid("30a19159-c4ac-45a4-9360-9fc57a041f08"),
                            Name = "London"
                        },
                        new
                        {
                            Id = new Guid("e3655963-0c9f-414c-8cf1-250abecbc5a8"),
                            CountryId = new Guid("0d348498-bae4-4d77-bd43-15d7a25f547f"),
                            Name = "Paris"
                        },
                        new
                        {
                            Id = new Guid("4d47a1c7-7982-479b-b914-5924d487a4c6"),
                            CountryId = new Guid("bf03a914-e0aa-4f6c-8c5f-b98cb3c3f05d"),
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = new Guid("6c2e4711-076c-4d59-9111-9d8c4cda72d7"),
                            CountryId = new Guid("fdde487e-7dfb-4ded-8359-3366c7360f5b"),
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = new Guid("0d58877a-1501-47a1-a5d2-90c708aa55b4"),
                            CountryId = new Guid("e6c6a5f2-2e30-4b2e-8662-07a68762d04c"),
                            Name = "Beijing"
                        },
                        new
                        {
                            Id = new Guid("d338ae98-d26e-4701-b3d6-a89c3237a57e"),
                            CountryId = new Guid("173ac1a7-92a7-42e4-bb16-2f027436d906"),
                            Name = "Sydney"
                        },
                        new
                        {
                            Id = new Guid("7c0d6f3d-5a33-4171-bae0-7ea803124589"),
                            CountryId = new Guid("49ea2389-cad6-45d6-8793-f24e00d58e42"),
                            Name = "Toronto"
                        },
                        new
                        {
                            Id = new Guid("413e8ace-b77b-4e53-a3c3-27278fce9f59"),
                            CountryId = new Guid("4be575e3-1f9d-4302-86be-92368a06cced"),
                            Name = "Mumbai"
                        },
                        new
                        {
                            Id = new Guid("0aa753cb-0fdd-44ea-af98-3aecbc071afe"),
                            CountryId = new Guid("37d7eaea-2215-4321-8239-90ef51495ccb"),
                            Name = "Cape Town"
                        },
                        new
                        {
                            Id = new Guid("01fde60c-a909-4c30-b4f1-90b9d6b8be19"),
                            CountryId = new Guid("c8a2ebda-ed91-4478-888b-5b3937f6afce"),
                            Name = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = new Guid("9c179bf6-412a-4e00-923e-7971dfa4f47f"),
                            CountryId = new Guid("bb7acfdf-960b-4816-b30e-c7ef3d54eec4"),
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = new Guid("484215d9-6c2f-4d2d-9297-990be06069c5"),
                            CountryId = new Guid("91f2630d-2857-4b1c-be71-4fa174dcc921"),
                            Name = "Dubai"
                        },
                        new
                        {
                            Id = new Guid("7c4e71c4-41c7-4df1-9573-9801613f006a"),
                            CountryId = new Guid("6e96d2a2-40d4-4c79-bd2a-617dbfc35ec8"),
                            Name = "Stockholm"
                        },
                        new
                        {
                            Id = new Guid("6266b8b1-fd96-4382-8859-46b71c74aaaf"),
                            CountryId = new Guid("666f8b18-4c37-492e-9cd0-2b451dece327"),
                            Name = "Seoul"
                        },
                        new
                        {
                            Id = new Guid("30e178c6-ecdd-4445-81e2-aa54e3b9b18d"),
                            CountryId = new Guid("07764b83-668a-42e7-a4bd-6a3993e34395"),
                            Name = "Mexico City"
                        },
                        new
                        {
                            Id = new Guid("795c9ad8-66b0-413d-8e4c-824e1724500c"),
                            CountryId = new Guid("812f901f-8627-4348-9f56-bfb53f25af5c"),
                            Name = "Amsterdam"
                        },
                        new
                        {
                            Id = new Guid("7da9aea5-d79a-47f2-b1f3-0e9a08087359"),
                            CountryId = new Guid("f9fd45eb-1417-4c9a-a6a0-732212c1c65a"),
                            Name = "Oslo"
                        },
                        new
                        {
                            Id = new Guid("133d22ae-9698-48e5-886c-776c24d9fe30"),
                            CountryId = new Guid("41d241ac-cd24-4184-9e8f-b8ddd6e33d23"),
                            Name = "Hanoi"
                        },
                        new
                        {
                            Id = new Guid("fd742303-dc4a-41ed-b4ab-2baab51255db"),
                            CountryId = new Guid("e4198b1c-550f-4fe0-8e76-bc759f30333f"),
                            Name = "Bangkok"
                        },
                        new
                        {
                            Id = new Guid("f2c82d80-d55c-42b8-ba37-210eb6fcaa86"),
                            CountryId = new Guid("3abb481f-7a38-4cda-9181-773f0ae533ab"),
                            Name = "Istanbul"
                        },
                        new
                        {
                            Id = new Guid("dd19c6c0-f7b1-46bf-9d4f-ae7f480fc687"),
                            CountryId = new Guid("379a34e0-e7ed-4ecd-b1e2-349c8a28d0b6"),
                            Name = "Buenos Aires"
                        },
                        new
                        {
                            Id = new Guid("8d059f7a-6b65-4cda-ada0-8d4bd7130b85"),
                            CountryId = new Guid("4c3775a6-c266-4023-ad3b-1e4a03cb0d5d"),
                            Name = "Rome"
                        },
                        new
                        {
                            Id = new Guid("806990d6-2872-4b2e-bc69-becfe9b76640"),
                            CountryId = new Guid("4f763cc3-b207-4d68-88a6-1311b3a1f59f"),
                            Name = "Cairo"
                        },
                        new
                        {
                            Id = new Guid("184d815e-84fb-4c14-9bf3-3f9619d2f755"),
                            CountryId = new Guid("9c46949e-5f21-4b86-a69b-124ad49a4549"),
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("92d2f553-3040-4a33-b1ba-924d7996f10f"),
                            CountryId = new Guid("a359f9db-975b-418c-a5e4-4b1526be97f7"),
                            Name = "Auckland"
                        },
                        new
                        {
                            Id = new Guid("399b828c-872e-437d-9685-6cacce0838fd"),
                            CountryId = new Guid("10c56e76-1867-43bd-a3d7-753e9e5fe782"),
                            Name = "Nairobi"
                        },
                        new
                        {
                            Id = new Guid("e616a969-cbbe-426d-9f5d-3fa941539425"),
                            CountryId = new Guid("62fc4ed0-50fd-4e28-bec5-4cb5ccb055b6"),
                            Name = "Barcelona"
                        },
                        new
                        {
                            Id = new Guid("276bc85b-2b33-4fb0-b576-a0b805445f80"),
                            CountryId = new Guid("1884d34b-a5eb-4129-ad4a-29e869ca920f"),
                            Name = "Athens"
                        },
                        new
                        {
                            Id = new Guid("672afff7-2758-4585-bf70-a58d33077068"),
                            CountryId = new Guid("dbf21426-c47b-4ab0-8828-66f79916627b"),
                            Name = "Dublin"
                        },
                        new
                        {
                            Id = new Guid("2ef139c4-b703-41d2-9204-66c88d12f9ea"),
                            CountryId = new Guid("c661a3b0-c5e6-4497-951f-7b2e4a198296"),
                            Name = "Zurich"
                        },
                        new
                        {
                            Id = new Guid("394bd884-698d-4d0b-b94e-bb7ad8c6d065"),
                            CountryId = new Guid("e8744c8d-109f-4afd-b9c9-8b24f3a4ed3a"),
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("8188e6a1-56f7-473f-963c-1d13060b0ddd"),
                            CountryId = new Guid("23576097-8173-423d-b10b-c3dc9a65ca2e"),
                            Name = "Vienna"
                        },
                        new
                        {
                            Id = new Guid("478b2594-287f-4bd8-a781-0f1122935fbd"),
                            CountryId = new Guid("e6c6a5f2-2e30-4b2e-8662-07a68762d04c"),
                            Name = "Hong Kong"
                        },
                        new
                        {
                            Id = new Guid("eb557ecf-d78a-4187-95ce-343051bbae9c"),
                            CountryId = new Guid("f8d896fc-3146-4724-ad1b-466bc2a1e5e9"),
                            Name = "Copenhagen"
                        },
                        new
                        {
                            Id = new Guid("8e777033-c814-4484-95d5-36390e1beb1b"),
                            CountryId = new Guid("c4748fa3-bf7d-46ef-8a6c-d5d2608be990"),
                            Name = "Lisbon"
                        },
                        new
                        {
                            Id = new Guid("6718fe9e-5a28-49ef-a597-8316022f2cf0"),
                            CountryId = new Guid("79c4b51f-f8fb-4429-84f5-26a8379aa82c"),
                            Name = "Warsaw"
                        },
                        new
                        {
                            Id = new Guid("58022ed7-d9c3-44e6-931e-efe1afcf0854"),
                            CountryId = new Guid("803155c9-e460-472f-ac8d-43d6b92129ee"),
                            Name = "Prague"
                        },
                        new
                        {
                            Id = new Guid("8730fa47-de2f-44cc-a851-7fb214b11e65"),
                            CountryId = new Guid("c5d0dfa6-62b2-47d1-a3d9-72db7ff1701e"),
                            Name = "Budapest"
                        },
                        new
                        {
                            Id = new Guid("dbbddc12-3091-4935-8b89-c70126e34cab"),
                            CountryId = new Guid("03899b9f-6596-4160-9c6d-685eac73be1f"),
                            Name = "Brussels"
                        },
                        new
                        {
                            Id = new Guid("5a5b54b5-0779-49dc-91a4-98678249cd08"),
                            CountryId = new Guid("e35f916a-fd11-407c-b308-5edf886f9419"),
                            Name = "Helsinki"
                        });
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CountryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a8cad485-726f-490b-9221-35afd49ee6b5"),
                            Name = "USA"
                        },
                        new
                        {
                            Id = new Guid("30a19159-c4ac-45a4-9360-9fc57a041f08"),
                            Name = "UK"
                        },
                        new
                        {
                            Id = new Guid("0d348498-bae4-4d77-bd43-15d7a25f547f"),
                            Name = "France"
                        },
                        new
                        {
                            Id = new Guid("bf03a914-e0aa-4f6c-8c5f-b98cb3c3f05d"),
                            Name = "Germany"
                        },
                        new
                        {
                            Id = new Guid("fdde487e-7dfb-4ded-8359-3366c7360f5b"),
                            Name = "Japan"
                        },
                        new
                        {
                            Id = new Guid("e6c6a5f2-2e30-4b2e-8662-07a68762d04c"),
                            Name = "China"
                        },
                        new
                        {
                            Id = new Guid("173ac1a7-92a7-42e4-bb16-2f027436d906"),
                            Name = "Australia"
                        },
                        new
                        {
                            Id = new Guid("49ea2389-cad6-45d6-8793-f24e00d58e42"),
                            Name = "Canada"
                        },
                        new
                        {
                            Id = new Guid("4be575e3-1f9d-4302-86be-92368a06cced"),
                            Name = "India"
                        },
                        new
                        {
                            Id = new Guid("37d7eaea-2215-4321-8239-90ef51495ccb"),
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = new Guid("c8a2ebda-ed91-4478-888b-5b3937f6afce"),
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = new Guid("bb7acfdf-960b-4816-b30e-c7ef3d54eec4"),
                            Name = "Russia"
                        },
                        new
                        {
                            Id = new Guid("91f2630d-2857-4b1c-be71-4fa174dcc921"),
                            Name = "UAE"
                        },
                        new
                        {
                            Id = new Guid("6e96d2a2-40d4-4c79-bd2a-617dbfc35ec8"),
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = new Guid("666f8b18-4c37-492e-9cd0-2b451dece327"),
                            Name = "South Korea"
                        },
                        new
                        {
                            Id = new Guid("07764b83-668a-42e7-a4bd-6a3993e34395"),
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = new Guid("812f901f-8627-4348-9f56-bfb53f25af5c"),
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("f9fd45eb-1417-4c9a-a6a0-732212c1c65a"),
                            Name = "Norway"
                        },
                        new
                        {
                            Id = new Guid("41d241ac-cd24-4184-9e8f-b8ddd6e33d23"),
                            Name = "Vietnam"
                        },
                        new
                        {
                            Id = new Guid("e4198b1c-550f-4fe0-8e76-bc759f30333f"),
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = new Guid("3abb481f-7a38-4cda-9181-773f0ae533ab"),
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = new Guid("379a34e0-e7ed-4ecd-b1e2-349c8a28d0b6"),
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = new Guid("4c3775a6-c266-4023-ad3b-1e4a03cb0d5d"),
                            Name = "Italy"
                        },
                        new
                        {
                            Id = new Guid("4f763cc3-b207-4d68-88a6-1311b3a1f59f"),
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = new Guid("9c46949e-5f21-4b86-a69b-124ad49a4549"),
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = new Guid("a359f9db-975b-418c-a5e4-4b1526be97f7"),
                            Name = "New Zealand"
                        },
                        new
                        {
                            Id = new Guid("10c56e76-1867-43bd-a3d7-753e9e5fe782"),
                            Name = "Kenya"
                        },
                        new
                        {
                            Id = new Guid("62fc4ed0-50fd-4e28-bec5-4cb5ccb055b6"),
                            Name = "Spain"
                        },
                        new
                        {
                            Id = new Guid("1884d34b-a5eb-4129-ad4a-29e869ca920f"),
                            Name = "Greece"
                        },
                        new
                        {
                            Id = new Guid("dbf21426-c47b-4ab0-8828-66f79916627b"),
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = new Guid("c661a3b0-c5e6-4497-951f-7b2e4a198296"),
                            Name = "Switzerland"
                        },
                        new
                        {
                            Id = new Guid("e8744c8d-109f-4afd-b9c9-8b24f3a4ed3a"),
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("23576097-8173-423d-b10b-c3dc9a65ca2e"),
                            Name = "Austria"
                        },
                        new
                        {
                            Id = new Guid("f8d896fc-3146-4724-ad1b-466bc2a1e5e9"),
                            Name = "Denmark"
                        },
                        new
                        {
                            Id = new Guid("c4748fa3-bf7d-46ef-8a6c-d5d2608be990"),
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = new Guid("79c4b51f-f8fb-4429-84f5-26a8379aa82c"),
                            Name = "Poland"
                        },
                        new
                        {
                            Id = new Guid("803155c9-e460-472f-ac8d-43d6b92129ee"),
                            Name = "Czech Republic"
                        },
                        new
                        {
                            Id = new Guid("c5d0dfa6-62b2-47d1-a3d9-72db7ff1701e"),
                            Name = "Hungary"
                        },
                        new
                        {
                            Id = new Guid("03899b9f-6596-4160-9c6d-685eac73be1f"),
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = new Guid("e35f916a-fd11-407c-b308-5edf886f9419"),
                            Name = "Finland"
                        });
                });

            modelBuilder.Entity("SmartHome.Data.Entities.PropertyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("AreaSquareMeters")
                        .HasColumnType("double precision");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("NumberOfFloors")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.SmartDeviceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Connection")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DeviceStatus")
                        .HasColumnType("integer");

                    b.Property<int>("DeviceType")
                        .HasColumnType("integer");

                    b.Property<float>("EnergySpending")
                        .HasColumnType("real");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PowerSupply")
                        .HasColumnType("integer");

                    b.Property<string>("SmartDeviceType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SmartDevices", (string)null);

                    b.HasDiscriminator<string>("SmartDeviceType").HasValue("SmartDeviceEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SmartHome.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.EnvironmentalConditionsSensorEntity", b =>
                {
                    b.HasBaseType("SmartHome.Data.Entities.SmartDeviceEntity");

                    b.Property<string>("Test")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("EnvironmentalConditionsSensor");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.CountryEntity", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.PropertyEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.CityEntity", "City")
                        .WithMany("Properties")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.SmartDeviceEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CountryEntity", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
