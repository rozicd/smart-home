// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartHome.Data;

#nullable disable

namespace SmartHome.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231120124253_restoringDeletedMigration")]
    partial class restoringDeletedMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartHome.Data.Entities.ActivationTokenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("expires")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ActivationTokens");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5009dcc-a740-4728-a397-c767d1c76f80"),
                            CountryId = new Guid("8fa1ad7f-237b-45cf-b127-e674521813c0"),
                            Name = "New York"
                        },
                        new
                        {
                            Id = new Guid("a9ab51c3-2412-44c2-9d45-4186bf56fc9a"),
                            CountryId = new Guid("8fa1ad7f-237b-45cf-b127-e674521813c0"),
                            Name = "Los Angeles"
                        },
                        new
                        {
                            Id = new Guid("ecdc84af-92ac-4c3c-9023-c07ab0ee5e99"),
                            CountryId = new Guid("8fa1ad7f-237b-45cf-b127-e674521813c0"),
                            Name = "Chicago"
                        },
                        new
                        {
                            Id = new Guid("dcdf33c1-e390-45e3-af81-83a67e3d4e16"),
                            CountryId = new Guid("f4478d08-809e-415e-b0a6-4dbc8fec270f"),
                            Name = "London"
                        },
                        new
                        {
                            Id = new Guid("d1ca288a-5c18-43e1-bcd7-9567cd0a009b"),
                            CountryId = new Guid("10b916c0-47bb-4569-ac25-9a5d701da007"),
                            Name = "Paris"
                        },
                        new
                        {
                            Id = new Guid("b25f78ac-f544-4133-b8d5-9e8a3622776d"),
                            CountryId = new Guid("863fbc7d-7a96-4ef2-9921-18cf0c9f06ca"),
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = new Guid("af4c6761-375f-4b5b-a2e0-bfcfdeab15b4"),
                            CountryId = new Guid("1d47a669-2e6f-410a-8883-812b8b658b8e"),
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = new Guid("c3d8232d-7069-4b44-b043-585f88c8f9a3"),
                            CountryId = new Guid("f6848c99-428f-4ebe-a051-95b856117395"),
                            Name = "Beijing"
                        },
                        new
                        {
                            Id = new Guid("77a7ab6b-499e-4c8b-845a-17d6561e0e09"),
                            CountryId = new Guid("31cadbad-04af-45ce-b819-c66f18b5dce2"),
                            Name = "Sydney"
                        },
                        new
                        {
                            Id = new Guid("194d4745-a4e5-414b-a1a8-e267e110d9a2"),
                            CountryId = new Guid("64e2577a-2fbd-48c2-8c24-e01885bb5b62"),
                            Name = "Toronto"
                        },
                        new
                        {
                            Id = new Guid("d0d84fe1-7e52-4e2a-8faa-35754963d6cb"),
                            CountryId = new Guid("1ee7b386-0ea0-4ce9-8c7e-bf2d5d83ea22"),
                            Name = "Mumbai"
                        },
                        new
                        {
                            Id = new Guid("452a752f-49f6-49d9-b201-c6c04a64953e"),
                            CountryId = new Guid("d6a4f7ef-79fe-457e-b97a-5a90a38e2803"),
                            Name = "Cape Town"
                        },
                        new
                        {
                            Id = new Guid("85a2d9a0-6140-412f-9ca5-ff3e84065641"),
                            CountryId = new Guid("f14f3d20-8a2a-4c7f-af5e-364c0563091e"),
                            Name = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = new Guid("3a894cac-d058-4f51-a30c-653786f32e09"),
                            CountryId = new Guid("1594284e-863c-41e7-b1db-9f3101b96936"),
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = new Guid("33f4d714-411b-44d4-a6c9-01adac7b28e9"),
                            CountryId = new Guid("e6778174-8607-4e67-8205-811b0da7be8b"),
                            Name = "Dubai"
                        },
                        new
                        {
                            Id = new Guid("132c26df-bec8-4575-b1d3-5940aaa061d1"),
                            CountryId = new Guid("015cbc63-6ea1-4217-8234-831e23fe0322"),
                            Name = "Stockholm"
                        },
                        new
                        {
                            Id = new Guid("f5190376-9dda-4748-a2a3-c179d05d03af"),
                            CountryId = new Guid("87774cd0-84ab-40c2-9ac6-e462d94dc906"),
                            Name = "Seoul"
                        },
                        new
                        {
                            Id = new Guid("77a37166-abc9-48af-af4a-90ba060d2ced"),
                            CountryId = new Guid("c50c25ba-a5bb-46bb-85ab-e13dda5da9d4"),
                            Name = "Mexico City"
                        },
                        new
                        {
                            Id = new Guid("48deb371-8ac1-4db3-9191-91e12e763d3f"),
                            CountryId = new Guid("e775ca30-1f8e-4393-b853-1524e704a1b9"),
                            Name = "Amsterdam"
                        },
                        new
                        {
                            Id = new Guid("c45c76f0-e269-49ad-bf45-477260771b1b"),
                            CountryId = new Guid("cfab1176-d51c-4c95-8e60-9e2dceb6b9aa"),
                            Name = "Oslo"
                        },
                        new
                        {
                            Id = new Guid("94ad428a-336b-4737-818d-f13fa8b0f1ad"),
                            CountryId = new Guid("8557ea04-40b1-49da-b728-fa5e078729da"),
                            Name = "Hanoi"
                        },
                        new
                        {
                            Id = new Guid("ffb59e6f-38ef-48bc-bdfb-25dcb6297ea2"),
                            CountryId = new Guid("3a1867a0-ba63-4e85-b133-3d1901944071"),
                            Name = "Bangkok"
                        },
                        new
                        {
                            Id = new Guid("2a91a6e9-6af3-4020-8fc1-d7d10c7f5033"),
                            CountryId = new Guid("bc315f9e-5d45-4c8f-ad74-e866e1873c38"),
                            Name = "Istanbul"
                        },
                        new
                        {
                            Id = new Guid("3a5568d6-8121-4ee2-be26-06dcb7fc8de7"),
                            CountryId = new Guid("1f810588-fefa-461e-9d32-a35e1f7ba6b4"),
                            Name = "Buenos Aires"
                        },
                        new
                        {
                            Id = new Guid("6fa95edb-fb13-45a0-88a3-85c7bea7bb82"),
                            CountryId = new Guid("a9e850d7-4fd5-4eff-bf23-7c1b549686c9"),
                            Name = "Rome"
                        },
                        new
                        {
                            Id = new Guid("af63ead2-fd2a-4d2e-8339-69a7fdbdc0cf"),
                            CountryId = new Guid("77a9349b-c6cf-4111-99b7-3a23e91735a6"),
                            Name = "Cairo"
                        },
                        new
                        {
                            Id = new Guid("441fc69c-213f-4628-aa5e-6f1edb82a3e7"),
                            CountryId = new Guid("f0f38290-a7f7-44ab-89c7-cfa714b4f83f"),
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("5ef486fa-3a8b-4fd5-8ffc-4c07d159508b"),
                            CountryId = new Guid("056f06bd-029b-4f8e-90e5-2528f86c1e22"),
                            Name = "Auckland"
                        },
                        new
                        {
                            Id = new Guid("efdf0f56-5f60-4139-9bac-713655c13403"),
                            CountryId = new Guid("acafaa13-4d70-4fed-89ef-116dcf570ea6"),
                            Name = "Nairobi"
                        },
                        new
                        {
                            Id = new Guid("965cac56-1f5c-49d6-a22a-a0946659d06f"),
                            CountryId = new Guid("d50f17c7-1f1e-4b3f-9859-4ccae11ffd3c"),
                            Name = "Barcelona"
                        },
                        new
                        {
                            Id = new Guid("fa9e1883-ea71-44f4-8c65-c82ebb136fcf"),
                            CountryId = new Guid("fe003fd7-510b-4967-b7ea-bcf53048c54e"),
                            Name = "Athens"
                        },
                        new
                        {
                            Id = new Guid("aa9e36c5-4fe5-42c1-97be-032df2156e8f"),
                            CountryId = new Guid("3e559040-5049-4db0-bb68-a629849864bb"),
                            Name = "Dublin"
                        },
                        new
                        {
                            Id = new Guid("3d4d0ad4-715c-486f-90d4-14f16ca03d09"),
                            CountryId = new Guid("26b99ed2-6dbf-48ee-9652-4ef0b9cf8fce"),
                            Name = "Zurich"
                        },
                        new
                        {
                            Id = new Guid("e9be79df-865c-4bde-812a-dd4b0be7ab74"),
                            CountryId = new Guid("e586d2a1-eff6-4911-a627-251467328dff"),
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("982541bf-8f1b-4c79-9549-72d6112da116"),
                            CountryId = new Guid("7c184f96-4f48-4ef6-ba41-d215735bb410"),
                            Name = "Vienna"
                        },
                        new
                        {
                            Id = new Guid("427bb942-9a5d-407b-b94d-f45cd3aa7833"),
                            CountryId = new Guid("f6848c99-428f-4ebe-a051-95b856117395"),
                            Name = "Hong Kong"
                        },
                        new
                        {
                            Id = new Guid("ab011edc-82e1-43d7-adb3-6f1236381753"),
                            CountryId = new Guid("ff0af716-735c-444c-a313-3e9d9ecf8189"),
                            Name = "Copenhagen"
                        },
                        new
                        {
                            Id = new Guid("9857a938-b41f-4db5-b812-ceec0da4c26f"),
                            CountryId = new Guid("dfe4fff3-e9ab-4008-97bd-bc2006e8a8de"),
                            Name = "Lisbon"
                        },
                        new
                        {
                            Id = new Guid("9269cf2d-3dfd-4b00-8ba3-cde84aad68e5"),
                            CountryId = new Guid("a5593b3d-8a4a-4ae3-bb06-5bbbeb13270b"),
                            Name = "Warsaw"
                        },
                        new
                        {
                            Id = new Guid("b48a3075-ee49-4990-b2a3-d43d46d2e5a4"),
                            CountryId = new Guid("9fb89163-a652-4a7f-957f-ff2dd1ed33f1"),
                            Name = "Prague"
                        },
                        new
                        {
                            Id = new Guid("41009ec9-fbff-4942-8401-6b6ddb87828d"),
                            CountryId = new Guid("05f3f7cc-0997-4fbd-abc5-87ab010ac8f2"),
                            Name = "Budapest"
                        },
                        new
                        {
                            Id = new Guid("6cf601d4-c71e-42cf-8a51-599cb0a1c8c9"),
                            CountryId = new Guid("7fbdf75f-4197-4b23-a092-45cde1781af5"),
                            Name = "Brussels"
                        },
                        new
                        {
                            Id = new Guid("c5c678bf-f501-4198-9eda-66ce83062756"),
                            CountryId = new Guid("15d0e6cb-b865-47e9-87c2-2953158812fa"),
                            Name = "Helsinki"
                        });
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CountryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8fa1ad7f-237b-45cf-b127-e674521813c0"),
                            Name = "USA"
                        },
                        new
                        {
                            Id = new Guid("f4478d08-809e-415e-b0a6-4dbc8fec270f"),
                            Name = "UK"
                        },
                        new
                        {
                            Id = new Guid("10b916c0-47bb-4569-ac25-9a5d701da007"),
                            Name = "France"
                        },
                        new
                        {
                            Id = new Guid("863fbc7d-7a96-4ef2-9921-18cf0c9f06ca"),
                            Name = "Germany"
                        },
                        new
                        {
                            Id = new Guid("1d47a669-2e6f-410a-8883-812b8b658b8e"),
                            Name = "Japan"
                        },
                        new
                        {
                            Id = new Guid("f6848c99-428f-4ebe-a051-95b856117395"),
                            Name = "China"
                        },
                        new
                        {
                            Id = new Guid("31cadbad-04af-45ce-b819-c66f18b5dce2"),
                            Name = "Australia"
                        },
                        new
                        {
                            Id = new Guid("64e2577a-2fbd-48c2-8c24-e01885bb5b62"),
                            Name = "Canada"
                        },
                        new
                        {
                            Id = new Guid("1ee7b386-0ea0-4ce9-8c7e-bf2d5d83ea22"),
                            Name = "India"
                        },
                        new
                        {
                            Id = new Guid("d6a4f7ef-79fe-457e-b97a-5a90a38e2803"),
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = new Guid("f14f3d20-8a2a-4c7f-af5e-364c0563091e"),
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = new Guid("1594284e-863c-41e7-b1db-9f3101b96936"),
                            Name = "Russia"
                        },
                        new
                        {
                            Id = new Guid("e6778174-8607-4e67-8205-811b0da7be8b"),
                            Name = "UAE"
                        },
                        new
                        {
                            Id = new Guid("015cbc63-6ea1-4217-8234-831e23fe0322"),
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = new Guid("87774cd0-84ab-40c2-9ac6-e462d94dc906"),
                            Name = "South Korea"
                        },
                        new
                        {
                            Id = new Guid("c50c25ba-a5bb-46bb-85ab-e13dda5da9d4"),
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = new Guid("e775ca30-1f8e-4393-b853-1524e704a1b9"),
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("cfab1176-d51c-4c95-8e60-9e2dceb6b9aa"),
                            Name = "Norway"
                        },
                        new
                        {
                            Id = new Guid("8557ea04-40b1-49da-b728-fa5e078729da"),
                            Name = "Vietnam"
                        },
                        new
                        {
                            Id = new Guid("3a1867a0-ba63-4e85-b133-3d1901944071"),
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = new Guid("bc315f9e-5d45-4c8f-ad74-e866e1873c38"),
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = new Guid("1f810588-fefa-461e-9d32-a35e1f7ba6b4"),
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = new Guid("a9e850d7-4fd5-4eff-bf23-7c1b549686c9"),
                            Name = "Italy"
                        },
                        new
                        {
                            Id = new Guid("77a9349b-c6cf-4111-99b7-3a23e91735a6"),
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = new Guid("f0f38290-a7f7-44ab-89c7-cfa714b4f83f"),
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = new Guid("056f06bd-029b-4f8e-90e5-2528f86c1e22"),
                            Name = "New Zealand"
                        },
                        new
                        {
                            Id = new Guid("acafaa13-4d70-4fed-89ef-116dcf570ea6"),
                            Name = "Kenya"
                        },
                        new
                        {
                            Id = new Guid("d50f17c7-1f1e-4b3f-9859-4ccae11ffd3c"),
                            Name = "Spain"
                        },
                        new
                        {
                            Id = new Guid("fe003fd7-510b-4967-b7ea-bcf53048c54e"),
                            Name = "Greece"
                        },
                        new
                        {
                            Id = new Guid("3e559040-5049-4db0-bb68-a629849864bb"),
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = new Guid("26b99ed2-6dbf-48ee-9652-4ef0b9cf8fce"),
                            Name = "Switzerland"
                        },
                        new
                        {
                            Id = new Guid("e586d2a1-eff6-4911-a627-251467328dff"),
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("7c184f96-4f48-4ef6-ba41-d215735bb410"),
                            Name = "Austria"
                        },
                        new
                        {
                            Id = new Guid("ff0af716-735c-444c-a313-3e9d9ecf8189"),
                            Name = "Denmark"
                        },
                        new
                        {
                            Id = new Guid("dfe4fff3-e9ab-4008-97bd-bc2006e8a8de"),
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = new Guid("a5593b3d-8a4a-4ae3-bb06-5bbbeb13270b"),
                            Name = "Poland"
                        },
                        new
                        {
                            Id = new Guid("9fb89163-a652-4a7f-957f-ff2dd1ed33f1"),
                            Name = "Czech Republic"
                        },
                        new
                        {
                            Id = new Guid("05f3f7cc-0997-4fbd-abc5-87ab010ac8f2"),
                            Name = "Hungary"
                        },
                        new
                        {
                            Id = new Guid("7fbdf75f-4197-4b23-a092-45cde1781af5"),
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = new Guid("15d0e6cb-b865-47e9-87c2-2953158812fa"),
                            Name = "Finland"
                        });
                });

            modelBuilder.Entity("SmartHome.Data.Entities.EnvironmentalConditionsSensorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Connection")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DeviceStatus")
                        .HasColumnType("integer");

                    b.Property<int>("DeviceType")
                        .HasColumnType("integer");

                    b.Property<float>("EnergySpending")
                        .HasColumnType("real");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PowerSupply")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EnvironmentalConditionsSensors");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.PropertyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("AreaSquareMeters")
                        .HasColumnType("double precision");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("NumberOfFloors")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfilePictureUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.CountryEntity", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.EnvironmentalConditionsSensorEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.PropertyEntity", b =>
                {
                    b.HasOne("SmartHome.Data.Entities.CityEntity", "City")
                        .WithMany("Properties")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CityEntity", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("SmartHome.Data.Entities.CountryEntity", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
